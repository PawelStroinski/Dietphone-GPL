<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="ExportAndImportData" xml:space="preserve">
    <value>export and import data</value>
  </data>
  <data name="Ingredients" xml:space="preserve">
    <value>ingredients</value>
  </data>
  <data name="Products" xml:space="preserve">
    <value>products</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>search</value>
  </data>
  <data name="SearchUppercase" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Settings" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="MealUppercase" xml:space="preserve">
    <value>MEAL</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="General" xml:space="preserve">
    <value>general</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NameUppercase" xml:space="preserve">
    <value>NAME</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>cancel</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>delete</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>Note</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>save</value>
  </data>
  <data name="AddName" xml:space="preserve">
    <value>ADD NAME</value>
  </data>
  <data name="AreYouSureYouWantToPermanentlyDeleteThisMeal" xml:space="preserve">
    <value>Are you sure you want to permanently delete this meal?

{0}</value>
  </data>
  <data name="AreYouSureYouWantToPermanentlyDeleteThisName" xml:space="preserve">
    <value>Are you sure you want to permanently delete this name?

{0}</value>
  </data>
  <data name="AreYouSureYouWantToSaveThisMeal" xml:space="preserve">
    <value>Are you sure you want to save this meal?</value>
  </data>
  <data name="CannotDeleteThisName" xml:space="preserve">
    <value>Cannot delete this name.</value>
  </data>
  <data name="CannotEditThisName" xml:space="preserve">
    <value>Cannot edit this name.</value>
  </data>
  <data name="DeleteMeal" xml:space="preserve">
    <value>Delete meal?</value>
  </data>
  <data name="DeleteName" xml:space="preserve">
    <value>Delete name?</value>
  </data>
  <data name="EditName" xml:space="preserve">
    <value>EDIT NAME</value>
  </data>
  <data name="IngredientQuantity" xml:space="preserve">
    <value>INGREDIENT QUANTITY</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>ok</value>
  </data>
  <data name="CuIs" xml:space="preserve">
    <value>CU (Carbohydrate Unit) is quantity of carbohydrates in grams divided by 10. 
Purpose is to facilitate the counting of carbohydrates in meals. Also known as Bread Unit.</value>
  </data>
  <data name="FpuIs" xml:space="preserve">
    <value>FPU (Fat-Protein Unit) means calories value coming from fat and protein divided by 100.
So one number gives information on both fat and protein in meal.</value>
  </data>
  <data name="Dietphone" xml:space="preserve">
    <value>DIETPHONE</value>
  </data>
  <data name="ExportAndImport" xml:space="preserve">
    <value>export&amp;import</value>
  </data>
  <data name="ExportByEmail" xml:space="preserve">
    <value>export by e-mail</value>
  </data>
  <data name="AllowsSendingDataAttachedToAnEMail" xml:space="preserve">
    <value>Allows sending data attached to an e-mail. The data will be in XML format.</value>
  </data>
  <data name="ImportFromAddress" xml:space="preserve">
    <value>import from address</value>
  </data>
  <data name="ExportCompletedSuccessfully" xml:space="preserve">
    <value>Export completed successfully.</value>
  </data>
  <data name="ImportCompletedSuccessfully" xml:space="preserve">
    <value>Import completed successfully.</value>
  </data>
  <data name="PleaseWait" xml:space="preserve">
    <value>Please wait...</value>
  </data>
  <data name="AnErrorOccurredWhileRetrievingTheImportedData" xml:space="preserve">
    <value>An error occurred while retrieving the imported data. Make sure that you have Internet access and address is correct.</value>
  </data>
  <data name="AnErrorOccurredWhileSendingTheExportedData" xml:space="preserve">
    <value>An error occurred while sending the exported data. Make sure that you have Internet access and e-mail address is valid.</value>
  </data>
  <data name="AnErrorOccurredDuringImport" xml:space="preserve">
    <value>An error occurred during import. Make sure that the imported data were not corrupted.</value>
  </data>
  <data name="SendToAnEMailAddress" xml:space="preserve">
    <value>Send to an e-mail address</value>
  </data>
  <data name="DownloadFileFromAddress" xml:space="preserve">
    <value>Download file from address</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>done</value>
  </data>
  <data name="SettingsUppercase" xml:space="preserve">
    <value>SETTINGS</value>
  </data>
  <data name="Results" xml:space="preserve">
    <value>results</value>
  </data>
  <data name="SelectNutritionalValuesToCalculateMax4" xml:space="preserve">
    <value>Select nutritional values to calculate (max. 4)</value>
  </data>
  <data name="EnergyCalories" xml:space="preserve">
    <value>energy (calories)</value>
  </data>
  <data name="ProteinGrams" xml:space="preserve">
    <value>protein (grams)</value>
  </data>
  <data name="DigestibleCarbohydratesGrams" xml:space="preserve">
    <value>digestible carbohydrates (grams)</value>
  </data>
  <data name="FatGrams" xml:space="preserve">
    <value>fat (grams)</value>
  </data>
  <data name="CuCarbohydrateUnit" xml:space="preserve">
    <value>CU - carbohydrate unit</value>
  </data>
  <data name="FpuFatProteinUnit" xml:space="preserve">
    <value>FPU - fat-protein unit</value>
  </data>
  <data name="LearnMoreAboutCuAndFpu" xml:space="preserve">
    <value>Learn more about CU and FPU...</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>language</value>
  </data>
  <data name="AppLanguage" xml:space="preserve">
    <value>App language</value>
  </data>
  <data name="LocalizationOfProductDatabase" xml:space="preserve">
    <value>Localization of product database</value>
  </data>
  <data name="YouCanChangeLocalizationOfProductDatabaseManyTimes" xml:space="preserve">
    <value>You can change localization of product database many times. This is useful if you travel often.</value>
  </data>
  <data name="ChangesOfLanguageAndLocalizationWillBeAppliedThe" xml:space="preserve">
    <value>Changes of language and localization will be applied the next time you start app.</value>
  </data>
  <data name="BugInAppReportToTheAuthor" xml:space="preserve">
    <value>Bug in app! Report to the author?</value>
  </data>
  <data name="Bug" xml:space="preserve">
    <value>Bug!</value>
  </data>
  <data name="IWouldLikeToReportTheFollowingBug" xml:space="preserve">
    <value>I would like to report the following bug:

{0}</value>
  </data>
  <data name="NoName" xml:space="preserve">
    <value>No name</value>
  </data>
  <data name="NoProduct" xml:space="preserve">
    <value>No product</value>
  </data>
  <data name="IngredientNoContainsFollowingErrors" xml:space="preserve">
    <value>Ingredient No {0} contains following errors. {1}
</value>
  </data>
  <data name="TheProductDoesNotExist" xml:space="preserve">
    <value>The product does not exist.</value>
  </data>
  <data name="QuantityOfTheIngredientWasNotSpecified" xml:space="preserve">
    <value>Quantity of the ingredient was not specified.</value>
  </data>
  <data name="NoInformationAboutNutritionalValuePerUnit" xml:space="preserve">
    <value>No information about nutritional value per unit {0}. Choose another unit.</value>
  </data>
  <data name="NotSpecifiedNutritionalValuePer100g" xml:space="preserve">
    <value>Not specified nutritional value per 100 g.</value>
  </data>
  <data name="In100gOfProductProbablyShouldBeCaloriesButIs" xml:space="preserve">
    <value>In 100 g of product, probably should be {0} calories (+/-{1} calories) but is {2} calories.</value>
  </data>
  <data name="InServingOfProductProbablyShouldBeCaloriesButIs" xml:space="preserve">
    <value>In serving of product, probably should be {0} calories (+/-{1} calories) but is {2} calories.</value>
  </data>
  <data name="ThereMayNotBeMoreDietaryFiberThanCarbohydrates" xml:space="preserve">
    <value>There may not be more dietary fiber than carbohydrates total.</value>
  </data>
  <data name="SpecifiedDescriptionOfServingSizeButNotTheSize" xml:space="preserve">
    <value>Specified description of serving size but not the size itself.</value>
  </data>
  <data name="SpecifiedServingSizeButNotDescriptionOfServingSize" xml:space="preserve">
    <value>Specified serving size but not description of serving size.</value>
  </data>
  <data name="ServingSizeInADifferentUnitThanGramsIsSpecifiedBut" xml:space="preserve">
    <value>Serving size in a different unit than grams is specified but its nutritional value is not specified.</value>
  </data>
  <data name="NutritionalValuePerServingSizeIsSpecifiedButDesc" xml:space="preserve">
    <value>Nutritional value per serving size is specified but description of serving size is not specified.</value>
  </data>
  <data name="AllowsToRetrieveDataFromAFileInXmlFormat" xml:space="preserve">
    <value>Allows to retrieve data from a file in XML format. The file that you previously sent to any server, e.g. Google Docs.</value>
  </data>
  <data name="CantUseServingSizeAsAUnitOfSizeOfServingSize" xml:space="preserve">
    <value>Can’t use serving size as a unit of size of serving size.</value>
  </data>
  <data name="TheQuantityOfCaloriesInAServingSizeOfTheProductIs" xml:space="preserve">
    <value>The quantity of calories in a serving size of the product is not proportional to the quantity in 100 g of product.</value>
  </data>
  <data name="TheQuantityOfProteinInAServingSizeOfTheProductIs" xml:space="preserve">
    <value>The quantity of protein in a serving size of the product is not proportional to the quantity in 100 g of product.</value>
  </data>
  <data name="TheQuantityOfFatInAServingSizeOfTheProductIsNot" xml:space="preserve">
    <value>The quantity of fat in a serving size of the product is not proportional to the quantity in 100 g of product.</value>
  </data>
  <data name="TheQuantityOfTotalCarbohydratesInAServingSizeOfThe" xml:space="preserve">
    <value>The quantity of total carbohydrates in a serving size of the product is not proportional to the quantity in 100 g of product.</value>
  </data>
  <data name="TheQuantityOfDietaryFiberInAServingSizeOfThe" xml:space="preserve">
    <value>The quantity of dietary fiber in a serving size of the product is not proportional to the quantity in 100 g of product.</value>
  </data>
  <data name="Serving" xml:space="preserve">
    <value>serving</value>
  </data>
  <data name="Older" xml:space="preserve">
    <value>older</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>yesterday</value>
  </data>
  <data name="Today" xml:space="preserve">
    <value>today</value>
  </data>
  <data name="Cal" xml:space="preserve">
    <value>{0} cal</value>
  </data>
  <data name="Prot" xml:space="preserve">
    <value>{0} prot</value>
  </data>
  <data name="Fat" xml:space="preserve">
    <value>{0} fat</value>
  </data>
  <data name="Carb" xml:space="preserve">
    <value>{0} carb</value>
  </data>
  <data name="Cu" xml:space="preserve">
    <value>{0} CU</value>
  </data>
  <data name="Fpu" xml:space="preserve">
    <value>{0} FPU</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>PRODUCT</value>
  </data>
  <data name="Category" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="CategoryUppercase" xml:space="preserve">
    <value>CATEGORY</value>
  </data>
  <data name="NutritionalValuePer100g" xml:space="preserve">
    <value>Nutritional value per 100 g</value>
  </data>
  <data name="ProteinG" xml:space="preserve">
    <value>Protein (g)</value>
  </data>
  <data name="CarbohydratesG" xml:space="preserve">
    <value>Carbohydrates (g)</value>
  </data>
  <data name="FatG" xml:space="preserve">
    <value>Fat (g)</value>
  </data>
  <data name="DietaryFiberG" xml:space="preserve">
    <value>Dietary fiber (g)</value>
  </data>
  <data name="EnergyCaloriesUppercase" xml:space="preserve">
    <value>Energy (calories)</value>
  </data>
  <data name="DigestibleCarbsG" xml:space="preserve">
    <value>Digestible carbs (g)</value>
  </data>
  <data name="FullSquareMeansMaximumInCategory" xml:space="preserve">
    <value>Full square means maximum in category.</value>
  </data>
  <data name="NutritionalValuePerServing" xml:space="preserve">
    <value>Nutritional value per serving</value>
  </data>
  <data name="ServingDescription" xml:space="preserve">
    <value>Serving description</value>
  </data>
  <data name="ServingSize" xml:space="preserve">
    <value>Serving size</value>
  </data>
  <data name="AddCategory" xml:space="preserve">
    <value>ADD CATEGORY</value>
  </data>
  <data name="EditCategory" xml:space="preserve">
    <value>EDIT CATEGORY</value>
  </data>
  <data name="ThisCategoryIncludesOtherProducts" xml:space="preserve">
    <value>This category includes other products. Change their category and try again.</value>
  </data>
  <data name="CannotDelete" xml:space="preserve">
    <value>Cannot delete</value>
  </data>
  <data name="AreYouSureYouWantToPermanentlyDeleteThisCategory" xml:space="preserve">
    <value>Are you sure you want to permanently delete this category?

{0}</value>
  </data>
  <data name="DeleteCategory" xml:space="preserve">
    <value>Delete category?</value>
  </data>
  <data name="AreYouSureYouWantToPermanentlyDeleteThisProduct" xml:space="preserve">
    <value>Are you sure you want to permanently delete this product?

{0}</value>
  </data>
  <data name="DeleteProduct" xml:space="preserve">
    <value>Delete product?</value>
  </data>
  <data name="AreYouSureYouWantToSaveThisProduct" xml:space="preserve">
    <value>Are you sure you want to save this product?</value>
  </data>
  <data name="Breakfast" xml:space="preserve">
    <value>Breakfast</value>
  </data>
  <data name="Lunch" xml:space="preserve">
    <value>Lunch</value>
  </data>
  <data name="Dinner" xml:space="preserve">
    <value>Dinner</value>
  </data>
  <data name="UnknownInsulinCircumstance" xml:space="preserve">
    <value>Unknown circumstance</value>
  </data>
  <data name="Insulin" xml:space="preserve">
    <value>insulin</value>
  </data>
  <data name="AreYouSureYouWantToSaveThisInsulin" xml:space="preserve">
    <value>Are you sure you want to save this insulin?</value>
  </data>
  <data name="CurrentSugar" xml:space="preserve">
    <value>Current sugar</value>
  </data>
  <data name="InsulinCircumstances" xml:space="preserve">
    <value>Insulin circumstances</value>
  </data>
  <data name="NormalBolus" xml:space="preserve">
    <value>Normal bolus</value>
  </data>
  <data name="SquareWaveBolus" xml:space="preserve">
    <value>Square wave bolus</value>
  </data>
  <data name="SquareWaveBolusHours" xml:space="preserve">
    <value>Square duration (h)</value>
  </data>
  <data name="DateLowercase" xml:space="preserve">
    <value>date</value>
  </data>
  <data name="Circumstances" xml:space="preserve">
    <value>CIRCUMSTANCES</value>
  </data>
  <data name="ChooseDate" xml:space="preserve">
    <value>CHOOSE DATE</value>
  </data>
  <data name="ChooseTime" xml:space="preserve">
    <value>CHOOSE TIME</value>
  </data>
  <data name="InsulinUppercase" xml:space="preserve">
    <value>INSULIN</value>
  </data>
  <data name="AddCircumstance" xml:space="preserve">
    <value>ADD CIRCUMSTANCE</value>
  </data>
  <data name="Exercise" xml:space="preserve">
    <value>Exercise</value>
  </data>
  <data name="Sickness" xml:space="preserve">
    <value>Sickness</value>
  </data>
  <data name="Stress" xml:space="preserve">
    <value>Stress</value>
  </data>
  <data name="CannotDeleteCircumstanceBecauseOnlyOneLeft" xml:space="preserve">
    <value>Cannot delete circumstance because only one left.</value>
  </data>
  <data name="SelectCircumstanceFirst" xml:space="preserve">
    <value>Please select circumstance and tap done first.</value>
  </data>
  <data name="Circumstance" xml:space="preserve">
    <value>Circumstance</value>
  </data>
  <data name="EditCircumstance" xml:space="preserve">
    <value>EDIT CIRCUMSTANCE</value>
  </data>
  <data name="AreYouSureYouWantToPermanentlyDeleteThisCircumstance" xml:space="preserve">
    <value>Are you sure you want to permanently delete this circumstance?

{0}</value>
  </data>
  <data name="DeleteCircumstance" xml:space="preserve">
    <value>Delete circumstance?</value>
  </data>
  <data name="AreYouSureYouWantToPermanentlyDeleteThisInsulin" xml:space="preserve">
    <value>Are you sure you want to permanently delete this insulin?

{0}</value>
  </data>
  <data name="DeleteInsulin" xml:space="preserve">
    <value>Delete insulin?</value>
  </data>
  <data name="NormalBolusText" xml:space="preserve">
    <value>{0} U</value>
  </data>
  <data name="SquareWaveBolusText" xml:space="preserve">
    <value>{0} U for {1} h</value>
  </data>
  <data name="Journal" xml:space="preserve">
    <value>journal</value>
  </data>
  <data name="BloodSugarMgdL" xml:space="preserve">
    <value>{0} mg/dL</value>
  </data>
  <data name="BloodSugarMmolL" xml:space="preserve">
    <value>{0} mmol/L</value>
  </data>
  <data name="BloodSugar" xml:space="preserve">
    <value>BLOOD SUGAR</value>
  </data>
  <data name="Sugar" xml:space="preserve">
    <value>sugar</value>
  </data>
  <data name="RecentlyUsed" xml:space="preserve">
    <value>10 recently used</value>
  </data>
  <data name="AutomaticallySavesDataToDropboxOnceAWeek" xml:space="preserve">
    <value>Automatically saves data to Dropbox once a week. The data will be saved in Applications folder in XML format.</value>
  </data>
  <data name="ExportToDropbox" xml:space="preserve">
    <value>export to Dropbox</value>
  </data>
  <data name="ImportFromDropbox" xml:space="preserve">
    <value>import from Dropbox</value>
  </data>
  <data name="RetrievesAndAddsToApplicationDataPreviouslySavedToDropbox" xml:space="preserve">
    <value>Retrieves and adds to application data previously saved to Dropbox.</value>
  </data>
  <data name="EstimatedBloodSugar" xml:space="preserve">
    <value>Estimated blood sugar</value>
  </data>
  <data name="Meal" xml:space="preserve">
    <value>meal</value>
  </data>
  <data name="ExportToDropboxIsActiveDoYouWantToTurnItOff" xml:space="preserve">
    <value>Export to Dropbox is active. Do you want to turn it off?</value>
  </data>
  <data name="ExportToDropboxActivationWasSuccessful" xml:space="preserve">
    <value>Export to Dropbox activation was successful.
The initial export is done too.</value>
  </data>
  <data name="ThereWasAnErrorDuringTheExportToDropbox" xml:space="preserve">
    <value>There was an error during the export to Dropbox.</value>
  </data>
  <data name="AvailableForImport" xml:space="preserve">
    <value>Available for import</value>
  </data>
  <data name="AnErrorOccurredDuringTheDropboxOperation" xml:space="preserve">
    <value>An error occurred during the Dropbox operation. Please try again.</value>
  </data>
  <data name="Suggestion" xml:space="preserve">
    <value>suggestion</value>
  </data>
  <data name="SuggestedInsulinHeader" xml:space="preserve">
    <value>The suggested bolus and the blood sugar estimated after its injection result from your previous entries. These should not be taken as valid values. It is only an estimate based on previously injected bolus and its effects.
This is only a tool and each decision should be taken thoughtfully.</value>
  </data>
  <data name="SuggestedBolus" xml:space="preserve">
    <value>Suggested bolus</value>
  </data>
  <data name="InsulinCalculationIncomplete" xml:space="preserve">
    <value>The fit of the meal is not complete.</value>
  </data>
  <data name="NoMealPresent" xml:space="preserve">
    <value>A current meal was not added</value>
  </data>
  <data name="NoSugarEntered" xml:space="preserve">
    <value>A current blood sugar was not entered</value>
  </data>
  <data name="NoSuggestion" xml:space="preserve">
    <value>Cannot find a suggestion based on your previous entries</value>
  </data>
  <data name="Relevance" xml:space="preserve">
    <value>relevance</value>
  </data>
  <data name="Factor" xml:space="preserve">
    <value>factor</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>close</value>
  </data>
  <data name="AlternativeOptions" xml:space="preserve">
    <value>ALTERNATIVE OPTIONS</value>
  </data>
  <data name="IngredientsNotIncluded" xml:space="preserve">
    <value>Ingredients not included</value>
  </data>
</root>