<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Telerik.Windows.Controls.Primitives</name>
    </assembly>
    <members>
        <member name="T:Telerik.Windows.Controls.ApplicationBarButton">
            <summary>
            Defines an abstract object that represents a button within a <see cref="T:Telerik.Windows.Controls.ApplicationBarInfo"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarButton.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationBarButton"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarButton.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationBarButton"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarButton.#ctor(System.String,System.Uri)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationBarButton"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="icon">The icon.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarButton.#ctor(System.String,System.Uri,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationBarButton"/> class.
            </summary>
            <param name="text">The text.</param>
            <param name="icon">The icon.</param>
            <param name="isEnabled">Is button enabled by default.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ApplicationBarButton.Click">
            <summary>
            This event fires when the ApplicationBarButton is tapped.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarButton.Text">
            <summary>
            Gets or sets the text associated with the button.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarButton.IconUri">
            <summary>
            Gets or sets the Uri where the icon for this button resides.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarButton.IsEnabled">
            <summary>
            Gets or sets a value that indicates if this button is enabled.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ApplicationBarButtonClickEventArgs">
            <summary>
            Encapsulates the data for a <see cref="E:ApplicationBarInfo.ButtonClick"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarButtonClickEventArgs.#ctor(Telerik.Windows.Controls.ApplicationBarButton)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationBarButtonClickEventArgs"/> class.
            </summary>
            <param name="button">The button.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarButtonClickEventArgs.Button">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.ApplicationBarButton"/> instance that was clicked.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ApplicationBarInfo">
            <summary>
            Provides an abstract application bar definition that may be used by both Silverlight and Windows Phone 7.
            </summary>
            <summary>
            The Windows Phone implementation of the <see cref="T:Telerik.Windows.Controls.ApplicationBarInfo"/> class, that represents the Windows Phone 7 application bar.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationBarInfo.OpacityProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.ApplicationBarInfo.BackgroundColor"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationBarInfo.BackgroundColorProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.ApplicationBarInfo.BackgroundColor"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ApplicationBarInfo.ForegroundColorProperty">
            <summary>
            Identifies the <see cref="P:Telerik.Windows.Controls.ApplicationBarInfo.ForegroundColor"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ApplicationBarInfo"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarInfo.OnButtonClick(Telerik.Windows.Controls.ApplicationBarButtonClickEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.ApplicationBarInfo.ButtonClick"/> event.
            </summary>
            <param name="e">The arguments that carry the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarInfo.CreateNativeInstance">
            <summary>
            Creates the platform specific application bar instance.
            For WP7 this will be the IApplicationBar implementation that resides within the Microsoft.Phone assembly.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.ApplicationBarInfo.RemoveEventHandlers(System.Object)">
            <summary>
            Removes any explicit event handlers, defined by the platform specific instance.
            </summary>
            <param name="nativeAppBar">The platform specific application bar instance.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.ApplicationBarInfo.ButtonClick">
            <summary>
            Occurs when a button on the application bar has been clicked.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarInfo.Opacity">
            <summary>
            Gets or sets the opacity of the application bar.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarInfo.Buttons">
            <summary>
            Gets the collection that contains all the buttons to be displayed by the application bar.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarInfo.BackgroundColor">
            <summary>
            Gets or sets the background color of the application bar.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ApplicationBarInfo.ForegroundColor">
            <summary>
            Gets or sets the foreground color of the application bar.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.HeaderedItemsControl">
            <summary>
            Represents a <see cref="T:Telerik.Windows.Controls.Primitives.RadItemsControl"/> which can display an optional header.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.RadItemsControl">
            <summary>
            Extends the base <see cref="T:System.Windows.Controls.ItemsControl"/>.
            Wraps basic routed events like Loaded and Unloaded in virtual methods and exposes common properties like IsLoaded and IsFocused.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadItemsControl.IsFocusedProperty">
            <summary>
            Defines the IsFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.RadItemsControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.BeginVisualStateUpdate">
            <summary>
            Locks any visual state update. Useful when performing batch operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.EndVisualStateUpdate(System.Boolean,System.Boolean)">
            <summary>
            Resumes visual state update and optionally re-evaluates the current visual state.
            </summary>
            <param name="update">True to re-evaluate the current visual state, false otherwise.</param>
            <param name="animate">True to use animations when updating visual state, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.UpdateVisualState(System.Boolean)">
            <summary>
            Re-evaluates the current visual state for the control and updates it if necessary.
            </summary>
            <param name="animate">True to use transitions during state update, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.SetVisualState(System.String,System.Boolean)">
            <summary>
            Applies the specified visual state as current.
            </summary>
            <param name="state">The new visual state.</param>
            <param name="animate">True to use transitions, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.CanUpdateVisualState">
            <summary>
            Determines whether the current visual state may be updated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a System.Windows.FrameworkElement has been constructed and added to the object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.ComposeVisualStateName">
            <summary>
            Builds the current visual state for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadItemsControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadItemsControl.CurrentVisualState">
            <summary>
            Gets the current visual state of the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadItemsControl.IsLoaded">
            <summary>
            Determines whether the control is currently loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadItemsControl.IsFocused">
            <summary>
            Determines whether the control is currently Focused (has the keyboard input).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadItemsControl.IsTemplateApplied">
            <summary>
            Determines whether the <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/> method has been called for this instance.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderStyleProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.Header"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.Header"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderTemplateProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.HeaderedItemsControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.Header"/> property has changed.
            </summary>
            <param name="oldContent"></param>
            <param name="newContent"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Occurs when the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderTemplate"/> property has changed.
            </summary>
            <param name="oldTemplate"></param>
            <param name="newTemplate"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderStyle">
            <summary>
            Gets or sets the Style object that defines header visual appearance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.Header">
            <summary>
            Gets or sets the object that represents the header of this control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.HeaderedItemsControl.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> instance that describes the Header property of this control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.SelectorItemClickEventArgs">
            <summary>
            Encapsulates the data associated with an item click action within a <see cref="T:Telerik.Windows.Controls.RadSelector"/> control.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.SelectorItemClickEventArgs.#ctor(Telerik.Windows.Controls.SelectorItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.SelectorItemClickEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.SelectorItemClickEventArgs.Item">
            <summary>
            Gets the item instance that was clicked.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.RadContentControl">
            <summary>
            Extends the base <see cref="T:System.Windows.Controls.ContentControl"/>.
            Wraps basic routed events like Loaded and Unloaded in virtual methods and expose common properties like IsLoaded and IsFocused.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadContentControl.IsFocusedProperty">
            <summary>
            Defines the IsFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.RadContentControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.BeginVisualStateUpdate">
            <summary>
            Locks any visual state update. Useful when performing batch operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.EndVisualStateUpdate(System.Boolean,System.Boolean)">
            <summary>
            Resumes visual state update and optionally re-evaluates the current visual state.
            </summary>
            <param name="update">True to re-evaluate the current visual state, false otherwise.</param>
            <param name="animate">True to use animations when updating visual state, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.UpdateVisualState(System.Boolean)">
            <summary>
            Re-evaluates the current visual state for the control and updates it if necessary.
            </summary>
            <param name="animate">True to use transitions during state update, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.SetVisualState(System.String,System.Boolean)">
            <summary>
            Applies the specified visual state as current.
            </summary>
            <param name="state">The new visual state.</param>
            <param name="animate">True to use transitions, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.CanUpdateVisualState">
            <summary>
            Determines whether the current visual state may be updated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a System.Windows.FrameworkElement has been constructed and added to the object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.ComposeVisualStateName">
            <summary>
            Builds the current visual state for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadContentControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadContentControl.CurrentVisualState">
            <summary>
            Gets the current visual state of the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadContentControl.IsLoaded">
            <summary>
            Determines whether the control is currently loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadContentControl.IsTemplateApplied">
            <summary>
            Determines whether the <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/> method has been called for this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadContentControl.IsFocused">
            <summary>
            Determines whether the control is currently Focused (has the keyboard input).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.RadControl">
            <summary>
            Wraps basic routed events like Loaded and Unloaded in virtual methods and expose common properties like IsLoaded and IsFocused.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.RadControl.IsFocusedProperty">
            <summary>
            Defines the IsFocused property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.RadControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.BeginVisualStateUpdate">
            <summary>
            Locks any visual state update. Useful when performing batch operations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.EndVisualStateUpdate(System.Boolean,System.Boolean)">
            <summary>
            Resumes visual state update and optionally re-evaluates the current visual state.
            </summary>
            <param name="update">True to re-evaluate the current visual state, false otherwise.</param>
            <param name="animate">True to use animations when updating visual state, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.UpdateVisualState(System.Boolean)">
            <summary>
            Re-evaluates the current visual state for the control and updates it if necessary.
            </summary>
            <param name="animate">True to use transitions during state update, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.SetVisualState(System.String,System.Boolean)">
            <summary>
            Applies the specified visual state as current.
            </summary>
            <param name="state">The new visual state.</param>
            <param name="animate">True to use transitions, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.CanUpdateVisualState">
            <summary>
            Determines whether the current visual state may be updated.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a System.Windows.FrameworkElement has been constructed and added to the object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.ComposeVisualStateName">
            <summary>
            Builds the current visual state for this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.OnGotFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.GotFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.RadControl.OnLostFocus(System.Windows.RoutedEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.LostFocus"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadControl.CurrentVisualState">
            <summary>
            Gets the current visual state of the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadControl.IsLoaded">
            <summary>
            Determines whether the control is currently loaded.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadControl.IsTemplateApplied">
            <summary>
            Determines whether the <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/> method has been called for this instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadControl.IsFocused">
            <summary>
            Determines whether the control is currently Focused (has the keyboard input).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.RadControl.IsProperlyTemplated">
            <summary>
            Gets a value indicating whether this control is properly templated.
            </summary>
            <value>
            	<c>True</c> if this instance is properly templated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSelector">
            <summary>
            Represents a headered items control that allows a user to select an item from the control's Items collection.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSelector.SelectedIndexProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadSelector.SelectedIndex"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadSelector.SelectedItemProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadSelector.SelectedItem"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSelector"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.FindVisualItem(System.Object)">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.SelectorItem"/> container that represents the specified data item.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.OnItemClick(Telerik.Windows.Controls.SelectorItem)">
            <summary>
            Handles a click from a child visual item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.IsItemItsOwnContainerOverride(System.Object)">
            <summary>
            Determines if the specified item is (or is eligible to be) its own container.
            </summary>
            <param name="item">The item to check.</param>
            <returns>
            true if the item is (or is eligible to be) its own container; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.SelectItem(Telerik.Windows.Controls.SelectorItem,System.Boolean)">
            <summary>
            Updates the IsSelected property of the specified visual item.
            </summary>
            <param name="visualItem"></param>
            <param name="select">True to select the item, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> property changes.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.UpdateSelection(System.Object,System.Object,System.Boolean)">
            <summary>
            Updates the current selection.
            </summary>
            <param name="oldData">The old data item that was selected.</param>
            <param name="newData">The new data item that will be selected.</param>
            <param name="updateIndex">True to set the <see cref="P:Telerik.Windows.Controls.RadSelector.SelectedIndex"/> to the index of the new data item, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadSelector.SelectionChanged"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSelector.NormalizeSelectedIndex">
            <summary>
            Normalizes the currently selected index due to a change in the Items collection.
            </summary>
            <returns>The already normalized index.</returns>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSelector.ItemClick">
            <summary>
            Occurs when an item within the control has been tapped.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadSelector.SelectionChanged">
            <summary>
            Occurs when the <see cref="P:Telerik.Windows.Controls.RadSelector.SelectedIndex"/> property is changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelector.SelectedIndex">
            <summary>
            Gets or sets the currently selected index.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelector.SelectedItem">
            <summary>
            Gets or sets the currently selected item within the items control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelector.SelectedVisualItem">
            <summary>
            Gets the currently selected <see cref="T:Telerik.Windows.Controls.SelectorItem"/> visual item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelector.UpdatingSelection">
            <summary>
            Determines whether the control is in a update selection transaction.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSelector.ItemsScroller">
            <summary>
            Gets the <see cref="T:System.Windows.Controls.ScrollViewer"/> instance used to scroll among items.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectorItem">
            <summary>
            Represents a container that visualizes a data item within a <see cref="T:Telerik.Windows.Controls.RadSelector"/> control.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SelectorItem.IsSelectedProperty">
            <summary>
            Defines the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectorItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.ComposeVisualStateName">
            <summary>
            Composes the name of the visual state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.OnAttached">
            <summary>
            Occurs when the item is successfully attached to a <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.OnDetaching">
            <summary>
            Occurs when the item is about to be detached from its owning <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.OnDetached">
            <summary>
            Occurs when the item has been detached from its owning <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.OnClick">
            <summary>
            Performs the core Click implementation. Currently the owner is asked to handle the action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectorItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationCompleted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectorItem.Owner">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance where this item resides.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectorItem.IsSelected">
            <summary>
            Determines whether the item is currently in Selected state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer">
            <summary>Exposes <see cref="T:Telerik.Windows.Controls.RadDataBoundListBox"/> types (including
            controls) to UI automation.</summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadVirtualizingDataControlAutomationPeer">
            <summary>Exposes <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/> types (including
            controls) to UI automation.</summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlAutomationPeer.#ctor(Telerik.Windows.Controls.RadVirtualizingDataControl)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlAutomationPeer.CreateItemAutomationPeer(System.Object)">
            <summary>
            Creates an instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer"/> class and
            associates it with the given item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.#ctor(Telerik.Windows.Controls.RadDataBoundListBox)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#GetSelection">
            <summary>
            Retrieves a UI automation provider for each child element that is selected.
            </summary>
            <returns>
            A generic list of UI automation providers.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#CanSelectMultiple">
            <summary>
            Gets a value that indicates whether the UI automation provider allows more than one child element to be selected concurrently.
            </summary>
            <value></value>
            <returns>true if multiple selection is allowed; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer.System#Windows#Automation#Provider#ISelectionProvider#IsSelectionRequired">
            <summary>
            Gets a value that indicates whether the UI automation provider requires at least one child element to be selected.
            </summary>
            <value></value>
            <returns>true if selection is required; otherwise, false.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer">
            <summary>Exposes <see cref="T:Telerik.Windows.Controls.RadDataBoundListBoxItem"/> types (including
            controls) to UI automation.</summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer">
            <summary>Exposes <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItem"/> types (including
            controls) to UI automation.</summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.#ctor(Telerik.Windows.Controls.RadVirtualizingDataControlItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.#ctor(Telerik.Windows.Controls.RadVirtualizingDataControlItem,Telerik.Windows.Controls.RadVirtualizingDataControlAutomationPeer)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer"/> class.
            </summary>
            <param name="item">The item.</param>
            <param name="itemsControlAutomationPeer">The items control automation peer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.SetupItem(System.Object)">
            <summary>
            Initializes the owner of the automation peer.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetAcceleratorKeyCore">
            <summary>
            Returns the accelerator key for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAcceleratorKey"/>.
            </summary>
            <returns>
            The <see cref="P:System.Windows.Automation.AutomationProperties.AcceleratorKey"/> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetAcceleratorKey(System.Windows.DependencyObject)"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetAccessKeyCore">
            <summary>
            Returns the access key for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAccessKey"/>.
            </summary>
            <returns>
            The access key for the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetAutomationIdCore">
            <summary>
            Returns the string that uniquely identifies the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationId"/>.
            </summary>
            <returns>
            The automation identifier for the element associated with the <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>, or <see cref="F:System.String.Empty"/> if there is no automation identifier.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetBoundingRectangleCore">
            <summary>
            Returns the <see cref="T:System.Windows.Rect"/> that represents the bounding rectangle of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetBoundingRectangle"/>.
            </summary>
            <returns>
            The <see cref="T:System.Windows.Rect"/> that contains the coordinates of the element.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetChildrenCore">
            <summary>
            Returns the collection of child elements of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetChildren"/>.
            </summary>
            <returns>
            A list of child <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> elements.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetClickablePointCore">
            <summary>
            Returns a <see cref="T:System.Windows.Point"/> that represents the clickable space that is on the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClickablePoint"/>.
            </summary>
            <returns>
            The <see cref="T:System.Windows.Point"/> on the element that allows a click.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetHelpTextCore">
            <summary>
            Returns the string that describes the functionality of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetHelpText"/>.
            </summary>
            <returns>
            The help text, or <see cref="F:System.String.Empty"/> if there is no help text.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetItemStatusCore">
            <summary>
            Returns a string that communicates the visual status of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemStatus"/>.
            </summary>
            <returns>
            The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.ItemStatus"/> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetItemStatus(System.Windows.DependencyObject)"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetItemTypeCore">
            <summary>
            Returns a human-readable string that contains the item type that the <see cref="T:System.Windows.UIElement"/> for this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> represents. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetItemType"/>.
            </summary>
            <returns>
            The string that contains the <see cref="P:System.Windows.Automation.AutomationProperties.ItemType"/> that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetItemType(System.Windows.DependencyObject)"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetLabeledByCore">
            <summary>
            Returns the <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> for the <see cref="T:System.Windows.UIElement"/> that targets the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLabeledBy"/>.
            </summary>
            <returns>
            The <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> for the element that is targeted by the <see cref="T:System.Windows.UIElement"/>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetLocalizedControlTypeCore">
            <summary>
            Returns the localized version of the control type for the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetLocalizedControlType"/>.
            </summary>
            <returns>
            The string that contains the type of control.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetNameCore">
            <summary>
            Returns the text label of the <see cref="T:System.Windows.FrameworkElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetName"/>.
            </summary>
            <returns>
            The text label of the element that is associated with this automation peer.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.GetOrientationCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> is laid out in a specific direction. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetOrientation"/>.
            </summary>
            <returns>
            The <see cref="F:System.Windows.Automation.Peers.AutomationOrientation.None"/> enumeration value.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.HasKeyboardFocusCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> currently has keyboard input focus. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.HasKeyboardFocus"/>.
            </summary>
            <returns>
            true if the element has keyboard input focus; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsContentElementCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> is an element that contains data that is presented to the user. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsContentElement"/>.
            </summary>
            <returns>
            true if the element contains data for the user to read; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsControlElementCore">
            <summary>
            Returns a value that indicates whether the element  that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> is understood by the end user as interactive. Optionally, the user might understand the element as contributing to the logical structure of the control in the GUI. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsControlElement"/>.
            </summary>
            <returns>
            true if the element is interactive; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsEnabledCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> is enabled. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsEnabled"/>.
            </summary>
            <returns>
            true if the element is enabled; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsKeyboardFocusableCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> can accept keyboard focus. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsKeyboardFocusable"/>.
            </summary>
            <returns>
            true if the element is focusable by the keyboard; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsOffscreenCore">
            <summary>
            Returns a value that indicates whether the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> is off the screen. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsOffscreen"/>.
            </summary>
            <returns>
            true if the element is not on the screen; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsPasswordCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> contains protected content. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsPassword"/>.
            </summary>
            <returns>
            true if the element contains sensitive content; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.IsRequiredForFormCore">
            <summary>
            Returns a value that indicates whether the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/> is required to be completed on a form. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.IsRequiredForForm"/>.
            </summary>
            <returns>
            The value that is returned by <see cref="M:System.Windows.Automation.AutomationProperties.GetIsRequiredForForm(System.Windows.DependencyObject)"/>, if the value is set; otherwise, false.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItemAutomationPeer.SetFocusCore">
            <summary>
            Sets the keyboard input focus on the element that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.SetFocus"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.#ctor(Telerik.Windows.Controls.RadDataBoundListBoxItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.#ctor(Telerik.Windows.Controls.RadDataBoundListBoxItem,Telerik.Windows.Controls.RadDataBoundListBoxAutomationPeer)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer"/> class.
            </summary>
            <param name="owner">The owner.</param>
            <param name="selectorAutomationPeer">The selector automation peer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            Returns the control pattern for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>.
            </summary>
            <param name="patternInterface">One of the enumeration values.</param>
            <returns>See Remarks.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.System#Windows#Automation#Provider#IScrollItemProvider#ScrollIntoView">
            <summary>
            Scrolls the content area of a container object in order to display the control within the visible region (viewport) of the container.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#AddToSelection">
            <summary>
            Adds the current element to the collection of selected items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#RemoveFromSelection">
            <summary>
            Removes the current element from the collection of selected items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#Select">
            <summary>
            Clears any existing selection and then selects the current element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.SetupItem(System.Object)">
            <summary>
            Initializes the owner of the automation peer.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.GetAutomationControlTypeCore">
            <summary>
            Returns the control type for the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetAutomationControlType"/>.
            </summary>
            <returns>A value of the enumeration.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.GetClassNameCore">
            <summary>
            Returns the name of the <see cref="T:System.Windows.UIElement"/> that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. This method is called by <see cref="M:System.Windows.Automation.Peers.AutomationPeer.GetClassName"/>.
            </summary>
            <returns>
            The name of the owner type that is associated with this <see cref="T:System.Windows.Automation.Peers.FrameworkElementAutomationPeer"/>. See Remarks.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.IsSelected">
            <summary>
            Gets a value that indicates whether an item is selected.
            </summary>
            <value></value>
            <returns>true if the element is selected; otherwise, false.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBoxItemAutomationPeer.System#Windows#Automation#Provider#ISelectionItemProvider#SelectionContainer">
            <summary>
            Gets the UI automation provider that implements <see cref="T:System.Windows.Automation.Provider.ISelectionProvider"/> and acts as the container for the calling object.
            </summary>
            <value></value>
            <returns>The UI automation provider.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.HeaderedContentControl">
            <summary>
            Represents a standard ContentControl with an optional Header displayed above the item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderStyleProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.Header"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.Header"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderTemplateProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderTemplate"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.HeaderedContentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.Primitives.HeaderedContentControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.HeaderedContentControl.OnHeaderChanged(System.Object,System.Object)">
            <summary>
            Occurs when the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.Header"/> property has changed.
            </summary>
            <param name="oldContent"></param>
            <param name="newContent"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.HeaderedContentControl.OnHeaderTemplateChanged(System.Windows.DataTemplate,System.Windows.DataTemplate)">
            <summary>
            Occurs when the <see cref="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderTemplate"/> property has changed.
            </summary>
            <param name="oldTemplate"></param>
            <param name="newTemplate"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderStyle">
            <summary>
            Gets or sets the Style object that defines header visual appearance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.Header">
            <summary>
            Gets or sets the object that represents the header of this control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.HeaderedContentControl.HeaderTemplate">
            <summary>
            Gets or sets the <see cref="T:System.Windows.DataTemplate"/> instance that describes the Header property of this control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.IInfiniteDataSource">
            <summary>
            Identifies virtual data source that may be used to simulate "Infinite" item loop in a <see cref="T:Telerik.Windows.Controls.RadInfiniteListBox"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IInfiniteDataSource.LogicalItems">
            <summary>
            Gets the logical items. That is the actual items that will be looped.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IInfiniteDataSource.VirtualCount">
            <summary>
            Gets the virtual count. That is the count that specifies how many times the logical items may be looped.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.IInfiniteDataSource.LogicalCount">
            <summary>
            Gets the logical count of the data source. That is actually the wheel size.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InfiniteListBoxItem">
            <summary>
            A special list box item that resides within a <see cref="T:Telerik.Windows.Controls.RadInfiniteListBox"/>.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InfiniteListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteListBoxItem.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationDelta"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationDelta(System.Object,System.Windows.Input.ManipulationDeltaEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteListBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.ListBoxItem.ManipulationCompleted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.RadLayoutTransformControl">
            <summary>
            Represents a control that applies a layout transformation to its Content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLayoutTransformControl.LayoutTransformProperty">
            <summary>
            Identifies the LayoutTransform DependencyProperty.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLayoutTransformControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadLayoutTransformControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLayoutTransformControl.OnLayoutTransformChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when the LayoutTransform property changes.
            </summary>
            <param name="args">The arguments containing the information for the property change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLayoutTransformControl.ProcessTransform(System.Windows.Media.Transform)">
            <summary>
            Processes the Transform to determine the corresponding Matrix.
            </summary>
            <param name="transform">Transform to process.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLayoutTransformControl.LayoutTransform">
            <summary>
            Gets or sets the layout transform to apply on the LayoutTransformer 
            control content.
            </summary>
            <remarks>
            Corresponds to UIElement.LayoutTransform.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.SelectionChangingEventArgs">
            <summary>
            Contains information about the <see cref="E:Telerik.Windows.Controls.RadDataBoundListBox.SelectionChanging"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.SelectionChangingEventArgs.#ctor(System.Collections.IList,System.Collections.IList)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.SelectionChangingEventArgs"/> class.
            </summary>
            <param name="removedItems">The removed items.</param>
            <param name="addedItems">The added items.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangingEventArgs.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangingEventArgs.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.SelectionChangingEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Telerik.Windows.Controls.SelectionChangingEventArgs"/> is canceled.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBoxItemTapEventArgs">
            <summary>
            Contains information about the <see cref="E:Telerik.Windows.Controls.RadDataBoundListBox.ItemTap"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemTapEventArgs.#ctor(Telerik.Windows.Controls.RadDataBoundListBoxItem,System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ListBoxItemTapEventArgs"/> class.
            </summary>
            <param name="item">The item.</param>
            <param name="manipulationContainer">The point at which the item was tapped.</param>
            <param name="manipulationOrigin">The point at which the item was tapped.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItemTapEventArgs.Item">
            <summary>
            Gets the item instance that was clicked.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItemTapEventArgs.ManipulationOrigin">
            <summary>
            Gets the point where the Tap gesture originated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItemTapEventArgs.ManipulationContainer">
            <summary>
            Gets the <see cref="T:System.Windows.UIElement"/> descendant of the associated item where the manipulation originated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDataBoundListBox">
            <summary>
            Represents a ListBox control that provides currency and selection logic.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadVirtualizingDataControl">
            <summary>
            Represents a base class for all data controls that support UI virtualization.
            </summary>
            <summary>
            This partial class holds the logic of the UI virtualization mechanism.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollBarModeProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemTemplateProperty">
            <summary>
            Identifies the ItemTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemsSourceProperty">
            <summary>
            Identifies the ItemsSource dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.DisplayMemberPathProperty">
            <summary>
            Identifies the DisplayMemberPath dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemTemplateSelectorProperty">
            <summary>
            Identifies the ItemTemplateSelector dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollBarStyleProperty">
            <summary>
            Identifies the ScrollBarStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemContainerStyleProperty">
            <summary>
            Identifies the ItemContainerStyle dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemContainerStyleSelectorProperty">
            <summary>
            Identifies the ItemContainerStyleSelector dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.BringIntoView(System.Object)">
            <summary>
            Brings the given data item into the viewport.
            </summary>
            <param name="item">The item to show.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.GetFlickInfo(System.Double)">
            <summary>
            Generates an instance of the <see cref="T:Telerik.Windows.Controls.FlickInfo"/> class that
            holds information about a flick interaction.
            </summary>
            <param name="initialVelocity">The initial velocity which defines the flick interaction.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.Flick(Telerik.Windows.Controls.FlickInfo)">
            <summary>
            Generates a flick interaction based on a <see cref="T:Telerik.Windows.Controls.FlickInfo"/> object.
            </summary>
            <param name="info">The flick info.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.Scroll(System.Double,System.TimeSpan)">
            <summary>
            Scrolls the control by the given offset for the given duration.
            </summary>
            <param name="offset">The offset.</param>
            <param name="duration">The duration.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.InitializeListSource">
            <summary>
            Initializes the list source. The list source is an object that
            supports data navigation and currency.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnListSourceCurrentItemChanging">
            <summary>
            Called when the current item of the ListSource is about to be changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnListSourceCurrentItemChanged">
            <summary>
            Called when the current item of the ListSource has changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnDisplayMemberPathChanged">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadVirtualizingDataControl.DisplayMemberPath"/> has changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a System.Windows.FrameworkElement has been constructed and added to the object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationStarted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationDelta"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationDelta(System.Object,System.Windows.Input.ManipulationDeltaEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationCompleted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.BeginUpdate">
            <summary>
            Brings the control in a state in which collection updates are not handled.
            In this way batch update operations can be performed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.EndUpdate(System.Boolean)">
            <summary>
            Resumes the normal state of the control in which collection updates are handled.
            </summary>
            <param name="update">True to trigger an update pass, otherwise false.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>Called when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items"/>
            property changes.</summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>
            that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnScrollStateChanged(Telerik.Windows.Controls.ScrollState,Telerik.Windows.Controls.ScrollState)">
            <summary>
            Called when the current scrolling state has changed.
            </summary>
            <param name="oldState">The old state.</param>
            <param name="newState">The new state.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.PerformScroll(System.Double,System.Boolean)">
            <summary>
            Scrolls the list of items with the given offset.
            </summary>
            <param name="deltaY">The offset to scroll.</param>
            <param name="lastOrFirstRealized">A boolean flag which determines whether the first or last
            data item in the list source are already realized. This will instruct the method to perform scroll offset
            coercion when needed.</param>
            <returns>The difference between the requested scroll offset and the actual one. This difference will be
            0 when no coercion has occured. This difference is used to calculate the immediate stretch that should be perform
            when coercion has occured to avoid glitchy UX.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.BeginAsyncBalance">
            <summary>
            Marks the next Balance to come as asynchronous.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.GetContainerForItem(System.Object)">
            <summary>
            Gets an instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItem"/> class that represents
            the visual container for the given data item.
            </summary>
            <param name="item">The data item for which to get the container.</param>
            <returns>The container if found, otherwise null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.GetContainerFromIndex(System.Int32)">
            <summary>
            Gets an instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItem"/> class that represents
            the visual container for the item at the given index.
            </summary>
            <param name="index">The index of the data item to get the container for.</param>
            <returns>The container if found, otherwise null.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.IsItemInViewport(System.Object)">
            <summary>
            Determines whether the specified data item is currently realized and its container is fully or partially visible.
            </summary>
            <param name="dataItem"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.OnItemStateChanged(System.Object,Telerik.Windows.Controls.ItemState)">
            <summary>
            Called when the virtualization state of a given data item is changed.
            </summary>
            <param name="item">The data item that has an updated state.</param>
            <param name="state">The new state.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.GetContainerForItemOverride">
            <summary>Creates or identifies the element that is used to display the given
            item.</summary>
            <returns>The element that is used to display the given item.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.ClearContainerForItemOverride(Telerik.Windows.Controls.RadVirtualizingDataControlItem,Telerik.Windows.Data.IDataSourceItem)">
            <summary>Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(RadVirtualizingDataControlItem,System.Object)"/>
            method.</summary>
            <param name="element">The container element.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControl.PrepareContainerForItemOverride(Telerik.Windows.Controls.RadVirtualizingDataControlItem,Telerik.Windows.Data.IDataSourceItem)">
            <summary>Prepares the specified element to display the specified item. </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemStateChanged">
            <summary>
            Fires when the virtualization state of an item is changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollStateChanged">
            <summary>
            Fires when the scrolling state of the control has changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemsChanged">
            <summary>
            Occurs when the items in the data source have changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.IsAsyncBalanceEnabled">
            <summary>
            Determines whether asynchronous balance may be used when needed - for example when the control is initially loading its items or upon a <see cref="M:Telerik.Windows.Controls.RadVirtualizingDataControl.BringIntoView(System.Object)"/> call.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.RecycledItemsCount">
            <summary>
            Gets the count of the currently recycled visual items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.RealizedItemsCount">
            <summary>
            Gets the count of the visual items that are currently realized.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.TopVisibleItem">
            <summary>
            Gets the IDataSourceItem instance that is the first visible item on top of the list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollState">
            <summary>
            Gets the current scrolling state of the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollBarStyle">
            <summary>
            Gets or sets the scroll bar style.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemContainerStyle">
            <summary>
            Gets or sets the style that is applied to each item container.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.RealizedItems">
            <summary>
            Gets an array containing the currently realized data items, i.e. the
            data items that a currently bound to a visual item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemContainerStyleSelector">
            <summary>
            Gets or sets a selector that is used when applying the style to an item container.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemTemplateSelector">
            <summary>
            Gets or sets the template selector that is used to select a template for an item container.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.DisplayMemberPath">
            <summary>
            Gets or sets the name or path of the property that is displayed for each data item.
            </summary>
            <value>The name or path of the property that is displayed for each the data item in the control. The default is an empty string ("").</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemTemplate">
            <summary>
            Gets or sets a <see cref="T:System.Windows.DataTemplate"/> that represents the template applied to each visual item in the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemsSource">
            <summary>
            Gets or sets a collection used to generate the content of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/>. 
            </summary>
            <value>The object that is used to generate the content of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/>. The default is null.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollBarMode">
            <summary>
            Gets or sets a value from the <see cref="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollBarMode"/> enumerator that defines how the scrollbar behaves.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.Telerik#Windows#Controls#IItemsContainer#ViewportItems">
            <summary>
            Returns the currently visible items in the Viewport.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.RealizedContainers">
            <summary>
            Returns all realized containers, i.e. all containers that are currently visible and bound to a data item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControl.IsProperlyTemplated">
            <summary>
            Gets a value indicating whether this control is properly templated.
            </summary>
            <value>
            	<c>True</c> if this instance is properly templated; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDataBoundListBox.IsSynchronizedWithCurrentItemProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.IsSynchronizedWithCurrentItem"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDataBoundListBox.SelectedItemProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedItem"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDataBoundListBox.SelectedValueProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedValue"/> dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDataBoundListBox.SelectedValuePathProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedValuePath"/> dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDataBoundListBox"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnItemTap(Telerik.Windows.Controls.RadDataBoundListBoxItem,System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Handles a click from a child visual item.
            </summary>
            <param name="item"></param>
            <param name="container"></param>
            <param name="hitPoint"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnSelectedValuePathChanged">
            <summary>
            Called when SelectedValuePath property value is changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnListSourceCurrentItemChanged">
            <summary>
            Called when the current item of the ListSource has changed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnItemIsSelectedChanged(Telerik.Windows.Controls.RadDataBoundListBoxItem)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBoxItem.IsSelected"/> proeprty is changed.
            </summary>
            <param name="item">The item which property has changed.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.UpdateSelection(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Updates the selection by setting the properties of the visual items participating in the current selection transaction.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.PrepareContainerForItemOverride(Telerik.Windows.Controls.RadVirtualizingDataControlItem,Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ItemsControl.Items"/>
            property changes.
            </summary>
            <param name="e">A <see cref="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs"/>
            that contains the event data.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.SelectItem(Telerik.Windows.Controls.RadDataBoundListBoxItem,System.Boolean)">
            <summary>
            Updates the IsSelected property of the specified visual item.
            </summary>
            <param name="visualItem"></param>
            <param name="select">True to select the item, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.ClearContainerForItemOverride(Telerik.Windows.Controls.RadVirtualizingDataControlItem,Telerik.Windows.Data.IDataSourceItem)">
            <summary>
            Undoes the effects of the <see cref="M:System.Windows.Controls.ItemsControl.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)"/> method.
            </summary>
            <param name="element">The container element.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element that is used to display the given item.
            </summary>
            <returns>
            The element that is used to display the given item.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnSelectionChanging(Telerik.Windows.Controls.SelectionChangingEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadDataBoundListBox.SelectionChanging"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadDataBoundListBox.SelectionChanged"/> event.
            </summary>
            <param name="args"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBox.OnIsSynchronizedWithCurrentItemChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Called when the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.IsSynchronizedWithCurrentItem"/> property value has changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDataBoundListBox.ItemTap">
            <summary>
            Occurs when an item within the control has been tapped.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDataBoundListBox.SelectionChanged">
            <summary>
            Occurs when the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedItem"/> property is changed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadDataBoundListBox.SelectionChanging">
            <summary>
            Occurs before the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedItem"/> property is about to change.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBox.IsSynchronizedWithCurrentItem">
            <summary>
            Gets or sets a boolean value defining whether the <see cref="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedItem"/> property
            is synchronized with the current item in the provided <see cref="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemsSource"/> in case
            the <see cref="P:Telerik.Windows.Controls.RadVirtualizingDataControl.ItemsSource"/> supports currency.
            </summary>
            <value>The is synchronized with current item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedItem">
            <summary>
            Gets or sets the currently selected item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedValue">
            <summary>
            Gets the value of the SelectedItem, obtained by using SelectedValuePath. 
            </summary>
            <value>The selected value.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBox.SelectedValuePath">
            <summary>
            Gets or sets the path that is used to get the SelectedValue from the SelectedItem. 
            </summary>
            <value>The selected value path.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDataBoundListBoxItem">
            <summary>
            Represents a visual item that is used in the <see cref="T:Telerik.Windows.Controls.RadDataBoundListBox"/> control.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadVirtualizingDataControlItem">
            <summary>
            Represents the visual container that us used in the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/>'s virtualization mechanism.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControlItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItem.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItem.OnAttached">
            <summary>
            Occurs when the item is successfully attached to a <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItem.OnDetaching">
            <summary>
            Occurs when the item is about to be detached from its owning <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadVirtualizingDataControlItem.OnDetached">
            <summary>
            Occurs when the item has been detached from its owning <see cref="T:Telerik.Windows.Controls.RadSelector"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadVirtualizingDataControlItem.ItemState">
            <summary>
            Gets the virtualization state of the item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDataBoundListBoxItem.IsSelectedProperty">
            <summary>
            Defines the IsSelected dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDataBoundListBoxItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.ComposeVisualStateName">
            <summary>
            Composes the name of the visual state.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.OnCreateAutomationPeer">
            <summary>
            When implemented in a derived class, returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> implementations for the Silverlight automation infrastructure.
            </summary>
            <returns>
            The class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer"/> subclass to return.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.OnTap(System.Windows.UIElement,System.Windows.Point)">
            <summary>
            Performs the core Tap implementation. Currently the owner is asked to handle the action.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationCompleted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDataBoundListBoxItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationStarted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDataBoundListBoxItem.IsSelected">
            <summary>
            Determines whether the item is currently in Selected state.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingListSelectionChangeReason">
            <summary>
            Defines the possible actions that may select an item within a LoopingList.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingListSelectionChangeReason.Private">
            <summary>
            The selected index is changed by the list itself to reflect an internal change.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingListSelectionChangeReason.PrivateNoNotify">
            <summary>
            The selected index is changed by the list itself. The SelectedIndexChanged event is not raised.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingListSelectionChangeReason.User">
            <summary>
            The selected index is changed by the user through code.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingListSelectionChangeReason.VisualItemClick">
            <summary>
            A visual item was clicked.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingListSelectionChangeReason.VisualItemSnappedToMiddle">
            <summary>
            The item is in the middle of a LoopingPanel and automatically selected.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadLoopingList">
            <summary>
            Implements a light-weight implementation of a Selector control which is completely virtualized in both UI and Data terms.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.IsLoopingEnabledProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.IsLoopingEnabled"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.IsCenteredProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.IsCentered"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.IsManipulationEnabledProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.IsManipulationEnabled"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.IsExpandedProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.IsExpanded"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.DataSourceProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.DataSource"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.SelectedIndexProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.SelectedIndex"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.ItemHeightProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.ItemHeight"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.ItemWidthProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.ItemWidth"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.ItemSpacingProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.ItemSpacing"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.ItemTemplateProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.ItemTemplate"/> property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadLoopingList.ItemStyleProperty">
            <summary>
            Defines the <see cref="P:Telerik.Windows.Controls.RadLoopingList.ItemStyle"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadLoopingList"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.SetVerticalOffset(System.Double)">
            <summary>
            Applies the specified vertical offset to the inner <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/>.
            </summary>
            <param name="offset">The desired offset.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.SetVerticalOffset(System.Double,System.Boolean)">
            <summary>
            Applies the specified vertical offset to the inner <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/>.
            </summary>
            <param name="offset">The desired offset.</param>
            <param name="animate">True to apply it using an animation, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.AnimateVerticalOffset(System.Double,System.Windows.Duration,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Applies the desired vertical offset by using an animation, described by the specified duration and easing function.
            </summary>
            <param name="offset"></param>
            <param name="duration"></param>
            <param name="easing"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.StopScrollAnimation">
            <summary>
            Stops any scrolling animation currently running.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.Collapse(System.Double)">
            <summary>
            Collapses the list, using the provided delay.
            </summary>
            <param name="delay"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnScrollCompleted(Telerik.Windows.Controls.LoopingList.LoopingListScrollEventArgs)">
            <summary>
            A callback from the child <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/> when a scroll operation has completed.
            Raises the <see cref="E:Telerik.Windows.Controls.RadLoopingList.ScrollCompleted"/> event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateSelection(System.Int32,Telerik.Windows.Controls.LoopingListSelectionChangeReason)">
            <summary>
            Applies the specified index as currently selected.
            </summary>
            <param name="newSelectedIndex">The desired selected index.</param>
            <param name="reason">The reason of the change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.SelectItem(Telerik.Windows.Controls.LoopingList.LoopingListItem,Telerik.Windows.Controls.LoopingListSelectionChangeReason)">
            <summary>
            Selects the specified visual item.
            </summary>
            <param name="item">The item to be selected.</param>
            <param name="reason">The reason that caused the select request.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.CreateVisualItem">
            <summary>
            Creates a <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingListItem"/> instance to be used by the hosted <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateVisualItem(Telerik.Windows.Controls.LoopingList.LoopingListItem,System.Int32,System.Boolean)">
            <summary>
            Associates the data at the specified logical index with the provided visual item instance.
            </summary>
            <param name="item">The visual item which data is to be updated.</param>
            <param name="logicalIndex">The logical index that describes the data.</param>
            <param name="force">True to re-evaluate the data event if the visual item is already associated with the specified logical index.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateItemVisualState(Telerik.Windows.Controls.LoopingList.LoopingListItem,Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams)">
            <summary>
            Updates the visual state of a single item.
            </summary>
            <param name="item">The <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingListItem"/> instance which state is to be updated.</param>
            <param name="updateParams">The structure that encapsulates different update parameters such as Animate, EvaluateEnabled, etc.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnVisualItemClick(Telerik.Windows.Controls.LoopingList.LoopingListItem)">
            <summary>
            Handles a click from a child <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingListItem"/>.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a System.Windows.FrameworkElement has been constructed and added to the object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnInitialized">
            <summary>
            Called after template is applied and the control is loaded on the SL visual tree.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.InitData">
            <summary>
            Initializes the data.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.GetLogicalCount">
            <summary>
            Retrieves the logical count of the current data source (if any).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateLogicalCount(System.Boolean)">
            <summary>
            Updates the logical count of the items panel.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.RaiseSelectedIndexChanged">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.RadLoopingList.SelectedIndexChanged"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateData">
            <summary>
            Forces complete data re-evaluation of the currently visualized items.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateDataItem(Telerik.Windows.Controls.LoopingListDataItem,System.Int32)">
            <summary>
            Allows to minimize the overhead of creating new instances whenever a logical index changes by formatting an existing data item instance.
            </summary>
            <param name="dataItem"></param>
            <param name="logicalIndex"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.CreateDataItem(System.Int32)">
            <summary>
            Creates a <see cref="T:Telerik.Windows.Controls.LoopingListDataItem"/> instance. Currently this method will return the provided <see cref="M:Telerik.Windows.Controls.LoopingListDataSource.GetItemAt(System.Int32)"/> method.
            </summary>
            <param name="logicalIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.IsItemSelected(System.Int32)">
            <summary>
            Determines whether the data item that resides at the specified logical index should be visualized with the Selected state.
            </summary>
            <param name="logicalIndex">The logical index that defines the data to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.IsItemEnabled(System.Int32)">
            <summary>
            Determines whether the logical item, representing the specified logical index should be enabled or not.
            </summary>
            <param name="logicalIndex">The logical index that defines the data to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.CanChangeSelectedIndex(System.Int32)">
            <summary>
            Determines whether the currently selected index can be changed.
            Allows inheritors to optionally prevent the change under certain conditions.
            </summary>
            <param name="newIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.SelectCurrentItem">
            <summary>
            Brings the currently selected index into view and selects the visual item that represents it.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.UpdateItemsVisualState(Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams)">
            <summary>
            Forces each visual item to update its state.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.CenterCurrentItem(System.Boolean)">
            <summary>
            Centers the item at the currently selected index.
            </summary>
            <param name="animate"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationStarted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationDelta"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationDelta(System.Object,System.Windows.Input.ManipulationDeltaEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadLoopingList.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationCompleted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadLoopingList.SelectedIndexChanged">
            <summary>
            Notifies for a change in the currently selected index.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadLoopingList.ScrollCompleted">
            <summary>
            Notifies that a scrolling operation has completed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ScrollState">
            <summary>
            Gets the current scrolling state of the inner <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.IsCentered">
            <summary>
            Determines whether the list will vertically center the currently selected item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.IsManipulationEnabled">
            <summary>
            Determines whether manipulation events are handled by the control.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.IsLoopingEnabled">
            <summary>
            Determines whether looping is enabled. That is to allow infinite scrolling of the current logical wheel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.IsExpanded">
            <summary>
            Determines whether the list is currently expanded. That is to put all the items except the currently selected one in the "Collapsed" visual state.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.SelectedIndex">
            <summary>
            Gets or sets the index that is currently selected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.DataSource">
            <summary>
            Gets or sets the data source that defines the logical items within this list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ItemWidth">
            <summary>
            Gets or sets the width of a single item within the hosted <see cref="T:Telerik.Windows.Controls.RadLoopingList"/> panel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ItemHeight">
            <summary>
            Gets or sets the height of a single item within the hosted <see cref="T:Telerik.Windows.Controls.RadLoopingList"/> panel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ItemSpacing">
            <summary>
            Gets or sets the spacing among visual items within the hosted <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/> instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.FirstRealizedIndex">
            <summary>
            Gets the first logical index that is realized within the hosted <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/>.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ItemTemplate">
            <summary>
            Gets or sets the DataTemplate to be applied to each visual item present within the selector.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.VerticalOffset">
            <summary>
            Gets the currently accumulated vertical offset.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.IsInitialized">
            <summary>
            Determines whether the list is loaded and has its template applied.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ItemStyle">
            <summary>
            Gets or sets the Style to be applied to each visual item present within the selector.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.SelectionChangeReason">
            <summary>
            Gets the reason for a change in the SelectedIndex property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadLoopingList.ItemsPanel">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/> instance that hosts the visual items.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingListDataItem">
            <summary>
            A special data item that may be visualized in a <see cref="N:Telerik.Windows.Controls.LoopingList"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingListDataItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataItem.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingListDataItem"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataItem.OnPropertyChanged(System.String)">
            <summary>
            Raises the <see cref="E:Telerik.Windows.Controls.LoopingListDataItem.PropertyChanged"/> event.
            </summary>
            <param name="propName">Name of the prop.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.LoopingListDataItem.PropertyChanged">
            <summary>
            Raised whenever a property has changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingListDataItem.Text">
            <summary>
            Gets or sets the text associated with this item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingListDataItemEventArgs">
            <summary>
            Contains the information about a <see cref="E:Telerik.Windows.Controls.LoopingListDataSource.ItemNeeded"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataItemEventArgs.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingListDataItemEventArgs"/> class.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataItemEventArgs.#ctor(System.Int32,Telerik.Windows.Controls.LoopingListDataItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingListDataItemEventArgs"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="item">The item.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingListDataItemEventArgs.Index">
            <summary>
            Gets the index at which the item is required.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingListDataItemEventArgs.Item">
            <summary>
            Gets or sets the item to be passed to the LoopingList that requested it.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingListDataSource">
            <summary>
            A special data source, used to define the logical items within a <see cref="N:Telerik.Windows.Controls.LoopingList"/> instance.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingListDataSource"/> class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.IsItemSelected(System.Int32)">
            <summary>
            Determines whether the logical item ad the specified index is selected.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.GetItemAt(System.Int32)">
            <summary>
            Gets the data item at the specified index.
            The current implementation will simply raise the <see cref="E:Telerik.Windows.Controls.LoopingListDataSource.ItemNeeded"/> event and return the associated (if any) instance.
            </summary>
            <param name="index">The index to retrieve item for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.UpdateItemAt(Telerik.Windows.Controls.LoopingListDataItem,System.Int32)">
            <summary>
            Updates the provided <see cref="T:Telerik.Windows.Controls.LoopingListDataItem"/> instance with the data that is defined for the specified logical index.
            </summary>
            <param name="dataItem">The data item instance.</param>
            <param name="logicalIndex">The logical index for which the item should be updated.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.GetItemSelected(System.Int32)">
            <summary>
            Implements the core IsItemSelected logic. Allows inheritors to provide their own custom logic.
            </summary>
            <param name="index">The index to check for.</param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.GetItemCore(System.Int32)">
            <summary>
            Core implementation of the <see cref="M:Telerik.Windows.Controls.LoopingListDataSource.GetItemAt(System.Int32)"/> method. Allows inheritors to specify their own custom logic.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingListDataSource.UpdateItemCore(Telerik.Windows.Controls.LoopingListDataItem,System.Int32)">
            <summary>
            Core implementation of the <see cref="M:Telerik.Windows.Controls.LoopingListDataSource.GetItemAt(System.Int32)"/> method. Allows inheritors to provide their own custom implementation.
            </summary>
            <param name="dataItem"></param>
            <param name="logicalIndex"></param>
        </member>
        <member name="E:Telerik.Windows.Controls.LoopingListDataSource.ItemNeeded">
            <summary>
            Raised whenever a data item instance is needed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.LoopingListDataSource.ItemUpdated">
            <summary>
            Raised whenever a data item instance needs to be updated with new content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingListDataSource.Count">
            <summary>
            Gets the count of logical items defined by this data source.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingListDataSource.Owner">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.RadLoopingList"/> instance this data source is currently associated with.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingList.LoopingListItem">
            <summary>
            Represents a visual item that resides within a <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingListItem.IsSelectedProperty">
            <summary>
            Specifies the <see cref="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.IsSelected"/> property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingListItem"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.SetVerticalOffset(System.Double)">
            <summary>
            Applies the desired vertical offset by setting a TranslateTranform.Y value.
            </summary>
            <param name="offset"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.SetVisualState(System.String,System.Boolean)">
            <summary>
            Applies the specified visual state as current.
            </summary>
            <param name="state">The new visual state.</param>
            <param name="animate">True to use transitions, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.ComposeVisualStateName">
            <summary>
            Builds the current visual state that is valid for the item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationCompleted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationCompleted(System.Object,System.Windows.Input.ManipulationCompletedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListItem.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)">
            <summary>
            Called when the <see cref="E:System.Windows.Controls.Control.ManipulationStarted"/> event occurs. This member overrides <see cref="M:System.Windows.UIElement.OnManipulationStarted(System.Object,System.Windows.Input.ManipulationStartedEventArgs)"/>.
            </summary>
            <param name="e">Event data for the event.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.IsSelected">
            <summary>
            Determines whether the visual item is currently selected.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.LogicalIndex">
            <summary>
            Gets the logical index in the owning LoopingPanel, represented by this item. 
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.ArrangeRect">
            <summary>
            Gets the Rect used by the owning LoopingPanel to arrange this item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.VerticalOffset">
            <summary>
            Gets the amount of pixels this item is translated vertically relative to its owning panel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.IsExpanded">
            <summary>
            Determines whether the item is currently expanded (its owning list is in Expanded state).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.Panel">
            <summary>
            Gets the <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/> instance where this item resides.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListItem.Manipulating">
            <summary>
            Determines whether the item is currently being manipulated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingList.LoopingListScrollEventArgs">
            <summary>
            Encapsulates the data associated with a LoopingList scroll event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingListScrollEventArgs.#ctor(Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingListScrollEventArgs"/> class.
            </summary>
            <param name="state">The state.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingListScrollEventArgs.ScrollState">
            <summary>
            Gets the scrolling state associated with the event.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState">
            <summary>
            Defines the possible scrolling states a LoopingPanel instance may enter.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState.NotScrolling">
            <summary>
            The panel is currently not scrolling.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState.Scrolling">
            <summary>
            The panel is scrolled due to a drag manipulation.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState.ScrollingToIndex">
            <summary>
            A logical index is brought into view via animated scrolling.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState.FlickScrolling">
            <summary>
            The panel is scrolled due to a flick gesture.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState.SnapScrolling">
            <summary>
            The panel is scrolled to snap to the middle item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingList.LoopingPanel">
            <summary>
            Represents a light-weight virtualized stack panel with vertical orientation with endless looping among logical items.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.LoopingList.LoopingPanel.VerticalOffsetProperty">
            <summary>
            Used internally to animate the vertical offset of the panel.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingPanel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.VisualItemFromLogicalIndex(System.Int32)">
            <summary>
            Gets the visual item that represents the specified logical index.
            Will return null if the index is not currently realized (visualized).
            </summary>
            <param name="logicalIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.SetVerticalOffset(System.Double,System.Boolean)">
            <summary>
            Applies the specified offset as current.
            </summary>
            <param name="offset">The desired offset.</param>
            <param name="animate">True to apply the offset by using animations, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.SetVerticalOffset(System.Double,System.Windows.Duration,System.Windows.Media.Animation.IEasingFunction)">
            <summary>
            Applies the specified offset as current.
            </summary>
            <param name="offset">The desired offset.</param>
            <param name="duration">The duration of the animation used to apply the offset.</param>
            <param name="ease">The easing function that describes animation interpolation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.BringIntoView(System.Int32)">
            <summary>
            Ensures that the visual item, associated with the specified logical index is currently displayed.
            </summary>
            <param name="logicalIndex"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.BringIntoView(System.Int32,System.Boolean)">
            <summary>
            Ensures that the visual item, associated with the specified logical index is currently displayed.
            </summary>
            <param name="logicalIndex"></param>
            <param name="animate">True to perform animated scrolling, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.StopOffsetAnimation(System.Boolean)">
            <summary>
            Stops the Flick animation (if running).
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.UpdateWheel(System.Double,System.Boolean)">
            <summary>
            Applies the specified vertical offset, translates the visual items accordingly and updates the logical indexes.
            </summary>
            <param name="newOffset">The new vertical offset.</param>
            <param name="force">True to update the wheel even if the new offset equals the current one, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.CalculateOffset(System.Int32,System.Boolean)">
            <summary>
            Calculates the vertical offset so that the first realized index becomes the specified one.
            </summary>
            <param name="logicalIndex">The desired logical index.</param>
            <param name="negative">True to calculate the offset in the negative direction, false to use the positive one.</param>
            <returns>The offset at which the index is completely visible.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.CalculateOffset(System.Int32)">
            <summary>
            Calculates the vertical offset so that the first realized index becomes the specified one.
            </summary>
            <param name="logicalIndex">The desired logical index.</param>
            <returns>The offset at which the index is completely visible.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.ScrollToIndex(Telerik.Windows.Controls.LoopingList.LoopingListItem,System.Int32)">
            <summary>
            Scrolls to the desired index, starting from the provided visual item.
            </summary>
            <param name="item">The visual item to start from.</param>
            <param name="to">The target index to scroll to.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.OnItemHeightChanged">
            <summary>
            Handles a change in the ItemHeight value.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Loaded event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Handles the Unloaded event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.OnScrollCompleted(Telerik.Windows.Controls.LoopingList.LoopingPanelScrollState)">
            <summary>
            Notifies that a scroll operation has completed.
            </summary>
            <param name="state">The state the panel was in before the scrolling ended.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.AnimateVerticalOffset(System.Double)">
            <summary>
            Animates the vertical offset to the specified value, starting from the current one.
            </summary>
            <param name="to">The final value of the animation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.AnimateVerticalOffset(System.Windows.Duration,System.Windows.Media.Animation.IEasingFunction,System.Double)">
            <summary>
            Animates the vertical offset to the specified value, starting from the current one.
            </summary>
            <param name="duration">The duration of the animation.</param>
            <param name="easing">The easing function that calculates animation steps.</param>
            <param name="to">The final value of the animation.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity"/>) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of the allocated sizes for child objects; or based on other considerations, such as a fixed container size.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size that is used after the element is arranged in layout.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.LoopingPanel.OnOffsetAnimationCompleted(System.Object,System.EventArgs)">
            <summary>
            Handles the Completed event of the storyboard, used to perform the Flick animation.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.ScrollState">
            <summary>
            Gets the current scrolling state of the panel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.IsLoopingEnabled">
            <summary>
            Determines whether looping is enabled. That is to allow infinite scrolling of the current logical wheel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.IsCentered">
            <summary>
            Determines whether the panel will vertically center the currently selected item.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.IsLoaded">
            <summary>
            Determines whether the panel is Loaded (present on the visual scene).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.Owner">
            <summary>
            Gets the <see cref="N:Telerik.Windows.Controls.LoopingList"/> instance that hosts this panel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.LogicalCount">
            <summary>
            Gets the count of the logical items that form the wheel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.TopLogicalIndex">
            <summary>
            Gets or sets the top logical index that is currently realized (visible on the screen).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.ItemHeight">
            <summary>
            Gets the height of a single item within the wheel.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.VerticalOffset">
            <summary>
            Gets the current vertically scrolled amount (in pixels).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.LoopingPanel.VisibleItemsParts">
            <summary>
            Gets the items currently visible on the screen (including fractions).
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams">
            <summary>
            Encapsulates the parameters needed to evaluate a <see cref="T:Telerik.Windows.Controls.LoopingList.LoopingListItem"/> visual state.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams"/> struct.
            </summary>
            <param name="animate">True to use transitions if visual state changes, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams"/> struct.
            </summary>
            <param name="animate">True to use transitions if visual state changes, false otherwise.</param>
            <param name="evaluateEnabled">True to evaluate the IsEnabled property of the visual item, false otherwise.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams"/> struct.
            </summary>
            <param name="animate">True to use transitions if visual state changes, false otherwise.</param>
            <param name="evaluateEnabled">True to evaluate the IsEnabled property of the visual item, false otherwise.</param>
            <param name="evaluateSelected">True to evaluate the IsSelected property of the visual item, false otherwise.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams.Animate">
            <summary>
            Determines whether VisualStateManager will use transitions upon visual state change.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams.EvaluateEnabled">
            <summary>
            Determines whether the IsEnabled property will be evaluated.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.LoopingList.VisualStateUpdateParams.EvaluateSelected">
            <summary>
            Determines whether the IsSelected property will be evaluated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ManipulationExtensions">
            <summary>
            Defines several helper methods to examine manipulation events.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ManipulationExtensions.IsTapGesture(System.Windows.Input.ManipulationCompletedEventArgs)">
            <summary>
            Determines whether the entire manipulation was a single Tap gesture.
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="T:Telerik.Windows.Controls.Dock">
            <summary>
            Specifies the Dock position of a child element that is inside a DockPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Left">
            <summary>
            A child element that is positioned on the left side of the DockPanel.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Top">
            <summary>
            A child element that is positioned at the top of the DockPanel. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Right">
            <summary>
            A child element that is positioned at the right of the DockPanel. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Dock.Bottom">
            <summary>
            A child element that is positioned at the bottom of the DockPanel.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadAnimatedPanel">
            <summary>
            Provides animation to panels. When the children collection
            or some layout property changes an animation is applied to the elements that need to be moved
            to a new location in the allocated layout space.
            Users must inherit from RadAnimatedPanel since it does not implement any measure and arrange logic.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimatedPanel.AnimationDurationProperty">
            <summary>
            Identifies the AnimationDuration dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimatedPanel.AnimationEasingProperty">
            <summary>
            Identifies the AnimationEasing dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadAnimatedPanel.IsAnimatedProperty">
            <summary>
            Identifies the IsAnimated dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimatedPanel.#ctor">
            <summary>
            Initializes a new instance of the RadAnimatedPanel class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadAnimatedPanel.AnimateElement(System.Windows.UIElement,System.Windows.Point,System.Windows.Point)">
            <summary>
            This is the entry point for the animated panel.
            After a child has been arranged this method has to be called with the new and old locations
            of the child as well as the child itself as arguments.
            </summary>
            <param name="element">The child to animate.</param>
            <param name="startPoint">The old location of the child.</param>
            <param name="endPoint">The new location of the child.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimatedPanel.IsAnimated">
            <summary>
            Gets or sets a value that enables or disables the animation when the items change or when the panel
            changes orientation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimatedPanel.AnimationDuration">
            <summary>
            Gets or sets the duration of the panel animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadAnimatedPanel.AnimationEasing">
            <summary>
            Gets or sets the easing of the panel animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadDockPanel">
            <summary>
            Defines an area where you can arrange child elements either horizontally or vertically, relative to each other. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDockPanel.DockProperty">
            <summary>
            Identifies the Dock attached property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadDockPanel.LastChildFillProperty">
            <summary>
            Identifies the LastChildFill dependency property. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadDockPanel"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.GetDock(System.Windows.UIElement)">
            <summary>
            Gets the value of the Dock attached property for a specified UIElement.
            </summary>
            <param name="element">The element from which the property value is read.</param>
            <returns>The Dock property value for the element.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.SetDock(System.Windows.UIElement,Telerik.Windows.Controls.Dock)">
            <summary>
            Sets the value of the Dock attached property to a specified element.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "Arrange" pass of Silverlight layout. Classes can override this method to define their own arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this element should use to arrange itself and its children.</param>
            <returns>The actual size used.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadDockPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the "measure" pass of Silverlight layout. Classes can override this method to define their own measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this element can give to child elements. Infinity can be specified as a value to indicate that the element will size to whatever content is available.</param>
            <returns>
            The size that this element determines it needs during layout, based on its calculations of child element sizes.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadDockPanel.LastChildFill">
            <summary>
            Gets or sets a value that indicates whether the last child element within 
            a DockPanel stretches to fill the remaining available space. This is a dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadUniformGrid">
            <summary>
            RadUniformGrid is a panel which creates a mesh of equally sized cells.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadUniformGrid.FirstColumnVisibilityProperty">
            <summary>
            Identifies the FirstColumnVisibility dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadUniformGrid.FirstRowVisibilityProperty">
            <summary>
            Identifies the FirstRowVisibility dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadUniformGrid.PreserveSpaceForCollapsedChildrenProperty">
            <summary>
            Identifies the PreserveSpaceForCollapsedChildren dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadUniformGrid.ChildrenFlowProperty">
            <summary>
            Identifies the ChildrenFlow dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadUniformGrid.NumberOfColumnsProperty">
            <summary>
            Identifies the NumberOfColumns dependency property. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadUniformGrid.NumberOfRowsProperty">
            <summary>
            Identifies the NumberOfRows dependency property. 
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadUniformGrid.#ctor">
            <summary>
            Initializes a new instance of the RadUniformGrid class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadUniformGrid.ArrangeOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Arrange pass of Silverlight layout. Classes can override this method to define their own Arrange pass behavior.
            </summary>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <returns>
            The actual size used once the element is arranged.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadUniformGrid.MeasureOverride(System.Windows.Size)">
            <summary>
            Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.
            </summary>
            <param name="availableSize">The available size that this object can give to child objects. Infinity can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <returns>
            The size that this object determines it needs during layout, based on its calculations of child object allotted sizes.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadUniformGrid.NumberOfColumns">
            <summary>
            Gets or sets the number of columns that are in the grid.
            </summary>
            <returns>
            The number of columns that are in the grid. The default value is zero (0). 
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadUniformGrid.NumberOfRows">
            <summary>
            Gets or sets the number of rows that are in the grid.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadUniformGrid.PreserveSpaceForCollapsedChildren">
            <summary>
            Gets or sets a value specifying whether a collapsed child's size should be preserved.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadUniformGrid.ChildrenFlow">
            <summary>
            Gets or sets a value that specifies the dimension in which child content is arranged.
            </summary>
            <returns>
            An <see cref="T:System.Windows.Controls.Orientation"></see> value that represents the physical orientation of content within the <see cref="T:Telerik.Windows.Controls.Primitives.RadUniformGrid"></see> as horizontal or vertical. The default value is <see cref="F:System.Windows.Controls.Orientation.Horizontal"></see>.
            </returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadUniformGrid.FirstColumnVisibility">
            <summary>
            Gets or sets value that hide or show the first column. This is a Dependency property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadUniformGrid.FirstRowVisibility">
            <summary>
            Gets or sets value that hide or show the first row. This is a Dependency property.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadWrapPanel">
            <summary>
            Arranges child elements in sequential position from left to right, breaking content 
            to the next line at the edge of the containing box. Subsequent ordering happens 
            sequentially from top to bottom or from left to right, depending on the value of 
            the Orientation property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.ItemHeightProperty">
            <summary>
            Identifies the ItemHeight dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.ItemWidthProperty">
            <summary>
            Identifies the ItemWidth dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWrapPanel.OrientationProperty">
            <summary>
            Identifies the Orientation dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.#ctor">
            <summary>
            Initializes a new instance of the RadWrapPanel class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.OnOrientationChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when the Orientation property changes.
            </summary>
            <param name="args">The arguments that contain information for the propery change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.OnItemHeightChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when the ItemHeight property changes.
            </summary>
            <param name="args">The arguments that contain information for the propery change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.OnItemWidthChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            This method is called when the ItemWidth property changes.
            </summary>
            <param name="args">The arguments that contain information for the propery change.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.MeasureOverride(System.Windows.Size)">
            <summary>
            Called in the measure layout pass to determine the desired size.
            </summary>
            <param name="availableSize">The available size that was given by the layout system.</param>
            <returns>Returns the desired size of the panel.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWrapPanel.ArrangeOverride(System.Windows.Size)">
            <summary>
            Called in the arrange pass of the layout system.
            </summary>
            <param name="finalSize">The final size that was given by the layout system.</param>
            <returns>The final size of the panel.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.ItemWidth">
            <summary>
            Gets or sets the width of the panel's items. This property has higher priority than the Width property of the items themselves.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.ItemHeight">
            <summary>
            Gets or sets the height of the panel's items. This property has higher priority than the Height property of the items themselves.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWrapPanel.Orientation">
            <summary>
            Gets or sets the orientation of the wrap panel. If animation is enabled the child elements
            will be moved with an animation to their new locations.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadWrapPanel.WrapPanelRow">
            <summary>
            This class holds a collection of elements on the same row or column and
            knows which element is widest/highest depending on the orientation of the panel.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadPhoneApplicationFrame">
            <summary>
            Allows defining page transition and orientation change animations for the root application frame.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadPhoneApplicationFrame.TransitionProperty">
            <summary>
            Identifies the Transition property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadPhoneApplicationFrame.OrientationChangeAnimationProperty">
            <summary>
            Identifies the OrientationChangeAnimation property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPhoneApplicationFrame.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadPhoneApplicationFrame"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPhoneApplicationFrame.OnApplyTemplate">
            <summary>
            Called when the element's Template changes.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadPhoneApplicationFrame.PageTransitionCompleted">
            <summary>
            Occurs when page transition has ended.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPhoneApplicationFrame.RootFrame">
            <summary>
            Gets the RadPhoneApplicationFrame that is used as a RootVisual in the application.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPhoneApplicationFrame.Transition">
            <summary>
            Gets or sets the used page Transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPhoneApplicationFrame.OrientationChangeAnimation">
            <summary>
            Gets or sets the animation used for the orientation change.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPhoneApplicationFrame.HoldNavigationUntilExitTransitionIsFinished">
            <summary>
            Gets or sets a value indicating whether whether the navigation should be holded until the exit animation has exited.
            </summary>
            <remarks>
            If you set this property to True it will actually stop the current navigation and will start the navigation again when the exit transition is done.
            This is usefull when the next page that is loading is heavy.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.Primitives.PickerControlBase">
            <summary>
            Base class for all controls that will open additional content via a popup <see cref="T:Telerik.Windows.Controls.RadWindow"/> instance.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.ApplicationBarInfoProperty">
            <summary>
            Identifies the ApplicationBarInfo dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.IsPopupClosedOnBackButtonProperty">
            <summary>
            Identifies the IsPopupClosedOnBackButton dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupSizeModeProperty">
            <summary>
            Identifies the PopupSizeMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.IsFullScreenProperty">
            <summary>
            Identifies the IsFullScreen dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.IsPopupAnimationEnabledProperty">
            <summary>
            Identifies the IsPopupAnimationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.IsPopupOpenProperty">
            <summary>
            Identifies the IsPopupOpen dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupPlacementTargetProperty">
            <summary>
            Identifies the PopupPlacementTarget dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupPlacementProperty">
            <summary>
            Identifies the PopupPlacement dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupSizeProperty">
            <summary>
            Identifies the PopupSize dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.VerticalPopupOffsetProperty">
            <summary>
            Identifies the VerticalPopupOffset dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupOpenAnimationProperty">
            <summary>
            Identifies the PopupOpenAnimation dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupCloseAnimationProperty">
            <summary>
            Identifies the PopupCloseAnimation dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.HorizontalPopupOffsetProperty">
            <summary>
            Identifies the HorizontalPopupOffset dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupContentProperty">
            <summary>
            Identifies the PopupContent dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupContentTemplateProperty">
            <summary>
            Identifies the PopupContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupHorizontalContentAlignmentProperty">
            <summary>
            Identifies the PopupHorizontalContentAlignment dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupVerticalContentAlignmentProperty">
            <summary>
            Identifies the PopupVerticalContentAlignment dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.GetPopupFromTemplate">
            <summary>
            Gets the popup part from the control tempalte.
            </summary>
            <returns>The popup part of <see cref="T:Telerik.Windows.Controls.RadPickerBox"/>.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnPopupOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            This method is called before the popup is opened.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnPopupOpened(System.EventArgs)">
            <summary>
            This method is called after the popup is opened.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnPopupClosing(System.ComponentModel.CancelEventArgs)">
            <summary>
            This method is called before the popup closes.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnPopupClosed">
            <summary>
            This method is called after the popup is closed.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when a System.Windows.FrameworkElement has been constructed and added to the object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.Primitives.PickerControlBase.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Occurs when this object is no longer connected to the main object tree.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.PickerControlBase.ApplicationBarButtonClick">
            <summary>
            Occurs when a button, residing on Picker's popup window application bar is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupOpened">
            <summary>
            Fires after the popup has been opened.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupOpening">
            <summary>
            Fires before the popup is opened. The open operation can be cancelled in this event.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupClosed">
            <summary>
            Fires after the popup has been closed.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupClosing">
            <summary>
            Fires before the popup is closed. The close operation can be cancelled in this event.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.ApplicationBarInfo">
            <summary>
            Gets or sets an ApplicationBarInfo which will be used to create a custom ApplicationBar for RadPickerBox when it is in full screen mode.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupHorizontalContentAlignment">
            <summary>
            Gets or sets the horizontal alignment of the PopupContent.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupVerticalContentAlignment">
            <summary>
            Gets or sets the vertical alignment of the PopupContent.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupContentTemplate">
            <summary>
            Gets or sets the DataTemplate that will be used to visualize the value of the PopupContent property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupContent">
            <summary>
            Gets or sets the content that represents <see cref="T:Telerik.Windows.Controls.RadPickerBox"/> when the popup is shown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.IsPopupClosedOnBackButton">
            <summary>
            Gets or sets a value that determines if the popup will be closed and navigation to the back page cancelled
            when the back hardware button is pressed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupSizeMode">
            <summary>
            Gets or sets the sizing mode that is used to determine the size of RadWindow.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.IsFullScreen">
            <summary>
            Gets or sets a value that determines if the popup will open covering the whole screen.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.IsPopupAnimationEnabled">
            <summary>
            Gets or sets a value that determines if the popup will appear and disappear with an animation.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupOpenAnimation">
            <summary>
            Gets or sets the animation with which the popup opens.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupCloseAnimation">
            <summary>
            Gets or sets the animation with which the popup closes.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.HorizontalPopupOffset">
            <summary>
            Gets or sets a value that horizontally offsets the popup when it is opened relative to the <see cref="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupPlacement"/> value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.VerticalPopupOffset">
            <summary>
            Gets or sets a value that vertically offsets the popup when it is opened relative to the <see cref="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupPlacement"/> value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.IsPopupOpen">
            <summary>
            Gets or sets a value that determines if the popup is open.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupPlacement">
            <summary>
            Gets or sets the position at which the popup part will be shown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupSize">
            <summary>
            Gets or sets the size of the popup part.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.PopupPlacementTarget">
            <summary>
            Gets or sets a UIElement to which the popup part will be relative when shown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.Primitives.PickerControlBase.IsProperlyTemplated">
            <summary>
            Returns true if the control was properly templated.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadPickerBox">
            <summary>
            Provides a base class for showing a popup and displaying the value returned by the popup if any.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadPickerBox.PickerButtonStyleProperty">
            <summary>
            Identifies the PickerButtonStyle dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBox.#ctor">
            <summary>
            Initializes a new instance of the RadPickerBox class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBox.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code or internal processes (such as a rebuilding layout pass) call <see cref="M:System.Windows.Controls.Control.ApplyTemplate"/>. In simplest terms, this means the method is called just before a UI element displays in an application. For more information, see Remarks.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBox.GetActionButtonFromTemplate">
            <summary>
            Gets the button, which shows the popup when clicked, from the control template.
            </summary>
            <returns>Returns the button, which shows the popup when clicked, from the control template.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBox.OnCreateAutomationPeer">
            <summary>
            Creates the automation peer for <see cref="T:Telerik.Windows.Controls.RadPickerBox"/>.
            </summary>
            <returns>An automation peer associated with this instance or <see cref="T:Telerik.Windows.Controls.RadPickerBox"/>.</returns>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPickerBox.PickerButtonStyle">
            <summary>
            Gets or sets an instance of the <see cref="T:System.Windows.Style"/> class
            that represents the style applied to the button that opens the popup of the picker box.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadPickerBoxAutomationPeer">
            <summary>
            This class enables RadPickerBox to be used by UI automation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBoxAutomationPeer.#ctor(Telerik.Windows.Controls.RadPickerBox)">
            <summary>
            Initializes a new instance of the RadPickerBoxAutomationPeer class.
            </summary>
            <param name="owner">The owner of the automation peer.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBoxAutomationPeer.GetPattern(System.Windows.Automation.Peers.PatternInterface)">
            <summary>
            This method is called by UI automation applications and should not be used directly by normal applications.
            </summary>
            <param name="patternInterface">The pattern interface to query for.</param>
            <returns>Returns an object that implements the provided interface or null if the interface is not supported.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBoxAutomationPeer.Collapse">
            <summary>
            Hides the RadPickerBox popup.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadPickerBoxAutomationPeer.Expand">
            <summary>
            Shows the RadPickerBox popup.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadPickerBoxAutomationPeer.ExpandCollapseState">
            <summary>
            Gets a value indicating whether the owner of this automation peer is expanded.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionPlayMode">
            <summary>
            Defines the modes used to play animations on RadTransitionControl.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionPlayMode.Simultaneously">
            <summary>
            Both NewContent and OldContent are animated simultaneously.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionPlayMode.Consecutively">
            <summary>
            First is animated the old content and then the new one.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionPlayMode.Manual">
            <summary>
            The tansitions are run by using the control, not on content change.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadContinuumAndSlideTransition">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTransition">
            <summary>
            Specifies the transition that will be used when changing content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransition.ForwardInAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going forward.
            </summary>
            /// <remarks>
            If not specified the animation will be autogenerated as a clone of the ForwardOutAnimation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransition.ForwardOutAnimation">
            <summary>
            Animation that will be played when the content has been unloaded, when going forward.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransition.BackwardInAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going backward.
            </summary>
            <remarks>
            If not specified the animation will be autogenerated as opposite to the ForwardOutAnimation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransition.BackwardOutAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going forward.
            </summary>
            <remarks>
            If not specified the animation will be autogenerated as opposite to the ForwardInAnimation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransition.PlayMode">
            <summary>
            Gets or sets the play mode to be used when playing content animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumAndSlideTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadContinuumAndSlideTransition"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadContinuumAndSlideTransition.ForwardOutAnimation">
            <summary>
            Animation that will be played when the content has been unloaded, when going forward.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Controls.TransitionType">
            <summary>
            Specifies the transition that will be used when changing content.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.All">
            <summary>
            All transitions are enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.Forward">
            <summary>
            All Forward transitions are enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.Backward">
            <summary>
            All Backward transitions are enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.Out">
            <summary>
            All Out transitions are enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.In">
            <summary>
            Only In transitions are enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.ForwardOut">
            <summary>
            Only ForwardOut transition is enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.ForwardIn">
            <summary>
            Only ForwardIn transition is enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.BackwardOut">
            <summary>
            Only BackwardOut transition is enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.BackwardIn">
            <summary>
            Only BackwardIn transition is enabled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.TransitionType.None">
            <summary>
            All transitions are disabled.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTransitionControl">
            <summary>
            This class represents a ContentControl that changes its content with a transition.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTransitionControl.TransitionProperty">
            <summary>
            Identifies the Transition property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadTransitionControl.EnabledTransitionsProperty">
            <summary>
            Identifies the EnabledTransitions property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTransitionControl"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.GetEnabledTransitions(System.Windows.DependencyObject)">
            <summary>
            Gets the EnabledTransitions dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.SetEnabledTransitions(System.Windows.DependencyObject,Telerik.Windows.Controls.TransitionType)">
            <summary>
            Sets the EnabledTransitions dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.GetTransition(System.Windows.DependencyObject)">
            <summary>
            Gets the Transition dependency property from an object.
            </summary>
            <param name="source">The object to get the property from.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.SetTransition(System.Windows.DependencyObject,Telerik.Windows.Controls.RadTransition)">
            <summary>
            Sets the Transition dependency property on an object.
            </summary>
            <param name="source">The object to set the property on.</param>
            <param name="value">The value to set.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.OnApplyTemplate">
            <summary>
            When overridden in a derived class, is invoked whenever application code
             or internal processes (such as a rebuilding layout pass) call System.Windows.Controls.Control.ApplyTemplate().
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTransitionControl.OnContentChanged(System.Object,System.Object)">
            <summary>
            Called when the value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property changes.
            </summary>
            <param name="oldContent">The old value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
            <param name="newContent">The new value of the <see cref="P:System.Windows.Controls.ContentControl.Content"/> property.</param>
        </member>
        <member name="E:Telerik.Windows.Controls.RadTransitionControl.OldContentTransitionEnded">
            <summary>
            Occurs when the transition over the old content has ended.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadTransitionControl.NewContentTransitionEnded">
            <summary>
            Occurs when the transition over the new content has ended.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.Transition">
            <summary>
            Gets or sets the Transition that will be used when content is changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.IsBackTransition">
            <summary>
            Sets a value indicating whether this instance will perform back transition.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.IsTransitionInProgress">
            <summary>
            Gets a value indicating whether the transition is still progress.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.PlayOnlyNewTransition">
            <summary>
            Gets or sets a value whether only the new transition will be played when the content is changed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadTransitionControl.ContentTransition">
            <summary>
            Gets the transition that will be used for animating the current content.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadContinuumTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadContinuumTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadContinuumTransition"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSlideAndSwivelTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideAndSwivelTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSlideAndSwivelTransition"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideAndSwivelTransition.ForwardInAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going forward.
            </summary>
            <value></value>
            /// 
            <remarks>
            If not specified the animation will be autogenerated as a clone of the ForwardOutAnimation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideAndSwivelTransition.ForwardOutAnimation">
            <summary>
            Animation that will be played when the content has been unloaded, when going forward.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideAndSwivelTransition.BackwardInAnimation">
            <summary>
            Animation that will be played when the content has been unloaded, when going forward.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideAndSwivelTransition.BackwardOutAnimation">
            <summary>
            Animation that will be played when the content has been unloaded, when going forward.
            </summary>
            <value></value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTurnstileAndSlideTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTurnstileAndSlideTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTurnstileAndSlideTransition"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFlipItemsTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFlipItemsTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadFlipItemsTransition"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSwivelTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSwivelTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSwivelTransition"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSwivelTransition.ForwardInAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going forward.
            </summary>
            <value></value>
            /// 
            <remarks>
            If not specified the animation will be autogenerated as a clone of the ForwardOutAnimation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSwivelTransition.BackwardInAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going backward.
            </summary>
            <value></value>
            <remarks>
            If not specified the animation will be autogenerated as opposite to the ForwardOutAnimation.
            </remarks>
        </member>
        <member name="T:Telerik.Windows.Controls.RadScaleTransition">
            <summary>
            See Calendar when making month -> day transition.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadScaleTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadScaleTransition"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadFadeTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadFadeTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadFadeTransition"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadSlideTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadSlideTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadSlideTransition"/> class.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideTransition.ForwardInAnimation">
            <summary>
            Animation that will be played when the content has been loaded, when going forward.
            </summary>
            <value></value>
            /// 
            <remarks>
            If not specified the animation will be autogenerated as a clone of the ForwardOutAnimation.
            </remarks>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideTransition.ForwardOutAnimation">
            <summary>
            Animation that will be played when the content has been unloaded, when going forward.
            </summary>
            <value></value>
        </member>
        <member name="P:Telerik.Windows.Controls.RadSlideTransition.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTileTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTileTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTileTransition"/> class.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadTurnstileTransition">
            <summary>
            
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadTurnstileTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadTurnstileTransition"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.AnimationValueChangeProvider.#ctor(System.Windows.Media.Animation.DoubleAnimation,Telerik.Windows.Controls.AnimationValueChangeProvider.CurrentValueChanged)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.AnimationValueChangeProvider"/> class.
            </summary>
            <param name="ownerAnimation">The parent animation.</param>
            <param name="valueChangedCallback">The callback which is executed when the animation value changes.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.AnimationValueChangeProvider.EaseInCore(System.Double)">
            <summary>
            Provides the logic portion of the easing function that you can override to produce the <see cref="F:System.Windows.Media.Animation.EasingMode.EaseIn"/> mode of the custom easing function.
            </summary>
            <param name="normalizedTime">Normalized time (progress) of the animation.</param>
            <returns>
            A double that represents the transformed progress.
            </returns>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemState">
            <summary>
            Represents the possible item virtualization states.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemState.Recycling">
            <summary>
            The visual item is about to be recycled for further use.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemState.Recycled">
            <summary>
            The visual item has been recycled.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemState.Realizing">
            <summary>
            The visual item is about to be bound to a data item.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ItemState.Realized">
            <summary>
            The visual item has been bound to a data item.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollBarMode">
            <summary>
            An enumerator describing the possible scrollbar modes for the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollBarMode.Default">
            <summary>
            The default mode: the scrollbar is shown while scrolling and hidden when not scrolling.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollBarMode.Hidden">
            <summary>
            The scrollbar is never shown.
            </summary>
            
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollBarMode.AlwaysVisible">
            <summary>
            The scrollbar is always shown.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollState">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.NotScrolling">
            <summary>
            No scroll operations are performed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.Scrolling">
            <summary>
            A standard scroll operation is performed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.Flicking">
            <summary>
            A flick-scroll operation is performed.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.TopStretch">
            <summary>
            A top-stretch scroll operation is performed. This happens when the upper scroll bound has been reached.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.BottomStretch">
            <summary>
            A top-stretch scroll operation is performed. This happens when the lower scroll bound has been reached.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.ForceStopTopBottomScroll">
            <summary>
            A scroll operation is force-stopped and stretch animation is performed in direction top-bottom. This
            happens when during a flick effect the topmost item is reached and thus the flick must be stopped.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ScrollState.ForceStopBottomTopScroll">
            <summary>
            A scroll operation is force-stopped and stretch animation is performed in direction bottom-top. This
            happens when during a flick effect the bottommost item is reached and thus the flick must be stopped.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ItemStateChangedEventArgs">
            <summary>
            Holds information about an item that is part of the <see cref="T:Telerik.Windows.Controls.RadVirtualizingDataControl"/>'s vurtualization mechanism.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemStateChangedEventArgs.DataItem">
            <summary>
            Gets the data item which state has changed.
            </summary>
            <value>The data item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ItemStateChangedEventArgs.State">
            <summary>
            Gets the new item state.
            </summary>
            <value>The state.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollOffsetChangedArgs">
            <summary>
            Represents a class that encapsulates information abount a value change of a scroll animation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollOffsetChangedArgs.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ScrollOffsetChangedArgs"/> class.
            </summary>
            <param name="newValue">The new scroll offset value.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollOffsetChangedArgs.NewOffset">
            <summary>
            Gets the new offset.
            </summary>
            <value>The new offset.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollStateChangedEventArgs">
            <summary>
            Represents a class containing information about the <see cref="E:Telerik.Windows.Controls.RadVirtualizingDataControl.ScrollStateChanged"/> event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ScrollStateChangedEventArgs.#ctor(Telerik.Windows.Controls.ScrollState,Telerik.Windows.Controls.ScrollState)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ScrollStateChangedEventArgs"/> class.
            </summary>
            <param name="oldState">The old state.</param>
            <param name="newState">The new state.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollStateChangedEventArgs.OldState">
            <summary>
            Gets or sets the old state.
            </summary>
            <value>The old state.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollStateChangedEventArgs.NewState">
            <summary>
            Gets or sets the new state.
            </summary>
            <value>The new state.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.StyleSelector">
            <summary>
            Chooses the style for each item of the ItemsControl.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
            <summary>
                When overriden this method is used for determining the Style of items.
            </summary>
            <param name="item">The item for whoose container is wanted.</param>
            <param name="container">The container for which a Style is selected.</param>
            <returns>The Style for the given container.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.PointConverter">
            <summary>
            Converts different types to Point.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.PointConverter.Convert(Telerik.Windows.Controls.PlacementMode,System.Windows.Size,System.Windows.Size)">
            <summary>
            Converts WindowPosition to Point.
            </summary>
            <param name="position">The WindowPosition value to convert.</param>
            <param name="containerSize">The container size relative to which the position will be determined.</param>
            <param name="contentSize">The size of the content in the container. The point will be the top left corner of the content so that it fits in the specified WindowPosition.</param>
            <returns>Returns the Point equivalent to the provided WindowPosition value.</returns>
        </member>
        <member name="T:Telerik.Windows.Controls.RadModalWindow">
            <summary>
            Provides the ability to show a window in a modal manner, not allowing interaction with user interface elements in the background.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadWindow">
            <summary>
            RadWindow provides users with the ability to show arbitrary content at an arbitrary location on the screen with a convenient high level API.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.ApplicationBarInfoProperty">
            <summary>
            Identifies the ApplicationBarInfo dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.WindowSizeModeProperty">
            <summary>
            Identifies the WindowSizeMode dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.IsClosedOnBackButtonProperty">
            <summary>
            Identifies the IsClosedOnBackKey dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.IsClosedOnOutsideTapProperty">
            <summary>
            Identifies the IsClosedOnOutsideTap dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.IsFullScreenProperty">
            <summary>
            Identifies the IsFullScreen dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.ContentProperty">
            <summary>
            Identifies the Content dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.ContentTemplateProperty">
            <summary>
            Identifies the ContentTemplate dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.WindowSizeProperty">
            <summary>
            Identifies the WindowSize dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.HorizontalOffsetProperty">
            <summary>
            Identifies the HorizontalOffset dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.PlacementProperty">
            <summary>
            Identifies the Placement dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.PlacementTargetProperty">
            <summary>
            Identifies the PlacementTarget dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.IsOpenProperty">
            <summary>
            Identifies the IsOpen dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.IsAnimationEnabledProperty">
            <summary>
            Identifies the IsAnimationEnabled dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.OpenAnimationProperty">
            <summary>
            Identifies the PopupOpenAnimation dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadWindow.CloseAnimationProperty">
            <summary>
            Identifies the PopupCloseAnimation dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.#ctor">
            <summary>
            Initializes a new instance of the RadWindow class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.OnWindowOpened">
            <summary>
            Fires the WindowShown event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.OnWindowOpening">
            <summary>
            Fires the WindowShowing event.
            </summary>
            <returns>A value indicating whether the show operation was cancelled.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.OnWindowClosed">
            <summary>
            Fires the WindowHidden event.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.OnWindowClosing">
            <summary>
            Fires the WindowHiding event.
            </summary>
            <returns>A value indicating whether the hide operation was cancelled.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.FireNormalEvent(System.EventHandler{System.EventArgs},System.EventArgs)">
            <summary>
            Utility method to fire an event.
            </summary>
            <param name="handler">The event to fire.</param>
            <param name="args">The args to pass to the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.FireCancelEvent(System.EventHandler{System.ComponentModel.CancelEventArgs},System.ComponentModel.CancelEventArgs)">
            <summary>
            Utility method to fire a cancel event.
            </summary>
            <param name="handler">The event to fire.</param>
            <param name="args">The arguments to pass to the event.</param>
            <returns>Returns whether the event was cancelled or not.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.SetWindowPosition(System.Windows.UIElement)">
            <summary>
            Sets the content position relative to the provided UIElement taking into account the value of the WindowPosition, HorizontalOffset and VerticalOffset properties.
            </summary>
            <param name="relativeElement">The UIElement to which the position will be relative.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.OnContentChanged(System.Object)">
            <summary>
            This method is called when the Content property changes.
            </summary>
            <param name="newContent">The new value of the Content property.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.AddCanvas(System.Windows.Controls.Panel)">
            <summary>
            Called when the window adds it's canvas to the parent panel just before opening.
            </summary>
            <param name="parent">The parent layout panel.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.RemoveCanvas(System.Windows.Controls.Panel)">
            <summary>
            Called when the window removes it's canvas to the parent panel just before opening.
            </summary>
            <param name="parent">The parent layout panel.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.CanCloseOnOutsideTap">
            <summary>
            Returns a value that indicates if this type allows closing on outside tap.
            </summary>
            <returns>Returns a value that indicates if this type allows closing on outside tap.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.ShouldHandleApplicationBar">
            <summary>
            This method is used to determine if RadWindow will insert a custom application bar when shown and
            restore the previous app bar when closed.
            </summary>
            <returns>Returns true if the application bar should be changed and false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.RestoreApplicationBarOverride">
            <summary>
            A virtual method which implements the core app bar restore logic.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadWindow.PrepareApplicationBarOverride">
            <summary>
            A virtual method which implements the core app bar prepare logic.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadWindow.ApplicationBarButtonClick">
            <summary>
            Occurs when a button, residing on Window's application bar is clicked.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadWindow.WindowOpened">
            <summary>
            This event fires after RadWindow has been shown.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadWindow.WindowOpening">
            <summary>
            This event fires right before RadWindow is shown. Users can cancel the show operation with the args.Cancel property.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadWindow.WindowClosed">
            <summary>
            This event fires after RadWindow has been hidden.
            </summary>
        </member>
        <member name="E:Telerik.Windows.Controls.RadWindow.WindowClosing">
            <summary>
            This event fires right before RadWindow is hidden. Users can cancel the hide operation with the args.Cancel property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.ApplicationBarInfo">
            <summary>
            Gets or sets the application bar that will appear on the hosting page when <see cref="P:Telerik.Windows.Controls.RadWindow.IsFullScreen"/> is true.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.WindowSizeMode">
            <summary>
            Gets or sets a value that is used to determine the size of RadWindow.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.IsFullScreen">
            <summary>
            Gets or set a value that determines if RadWindow will cover the whoe screen.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.IsClosedOnOutsideTap">
            <summary>
            Gets or sets a value that determines whether RadWindow will automatically close when the user taps outside the window content.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.IsClosedOnBackButton">
            <summary>
            Gets or sets a value that determines if RadWindow will close and cancel the page navigation when the back button is pressed.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.IsAnimationEnabled">
            <summary>
            Gets or sets a value that determines if animations are to be played when opening and closing RadWindow.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.OpenAnimation">
            <summary>
            Gets or sets the animation with which RadWindow will appear when IsOpen is set to true.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.CloseAnimation">
            <summary>
            Gets or sets the animation with which RadWindow will disappear when IsOpen is set to false.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.IsOpen">
            <summary>
            Gets a value indicating if RadWindow is currently shown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.PlacementTarget">
            <summary>
            Gets or sets a UIElement to which RadWindow will be relative when shown with a Show() method that does not accept the relativeVisual argument.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.Placement">
            <summary>
            Gets or sets a value indicating where RadWindow will appear.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.HorizontalOffset">
            <summary>
            Gets or sets a value that will be used to horizontally nudge the window relative to the WindowPosition value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.VerticalOffset">
            <summary>
            Gets or sets a value that will be used to vertically nudge the window relative to the WindowPosition value.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.WindowSize">
            <summary>
            Gets or sets the size of the window when it is shown.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.ContentTemplate">
            <summary>
            Gets or sets the data template that will be used to visualize the value of the Content property.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.Content">
            <summary>
            Gets or sets the content that will be shown inside RadWindow.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadWindow.HostPage">
            <summary>
            Gets the page that hosts this window.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadModalWindow.#ctor">
            <summary>
            Initializes a new instance of the RadModalWindow class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadModalWindow.CanCloseOnOutsideTap">
            <summary>
            Returns a value that indicates if this type allows closing on outside tap.
            </summary>
            <returns>Returns a value that indicates if this type allows closing on outside tap.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadModalWindow.ShouldHandleApplicationBar">
            <summary>
            This method is used to determine if RadWindow will insert a custom application bar when shown and
            restore the previous app bar when closed.
            </summary>
            <returns>Returns true if the application bar should be changed and false otherwise.</returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadModalWindow.AddCanvas(System.Windows.Controls.Panel)">
            <summary>
            Called when the window adds it's canvas to the parent panel just before opening.
            </summary>
            <param name="parent">The parent layout panel.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadModalWindow.RemoveCanvas(System.Windows.Controls.Panel)">
            <summary>
            Called when the window removes it's canvas to the parent panel just before opening.
            </summary>
            <param name="parent">The parent layout panel.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadModalWindow.SetWindowPosition(System.Windows.UIElement)">
            <summary>
            Sets the content position relative to the provided UIElement taking into account the value of the WindowPosition, HorizontalOffset and VerticalOffset properties.
            </summary>
            <param name="relativeElement">The UIElement to which the position will be relative.</param>
        </member>
        <member name="T:Telerik.Windows.Controls.WindowSizeMode">
            <summary>
            Used by RadWindow to determine how to calculate it's size.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowSizeMode.FitToPlacementTarget">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.WindowSizeMode.AutoSize">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.SiblingHideMode">
            <summary>
            Specifies when Opacity = 0 will be applied to all siblings RadWindow is displayed in full screen.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SiblingHideMode.OnOpening">
            <summary>
            Opacity is applied when the window is about to be opened.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.SiblingHideMode.OnOpenAnimationCompleted">
            <summary>
            Opacity is applied when the open animation (if any) is completed.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.PlacementMode">
            <summary>
            This enum is used by RadWindow to determine where RadWindow will be shown.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.CenterCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.CenterLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.CenterRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.TopCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.BottomCenter">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.PlacementMode.BottomRight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.ListBoxItemRange">
            <summary>
            A struct that represents an index range of list box items. 
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.ListBoxItemRange.Empty">
            <summary>
            Defines an empty list box item range.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.ListBoxItemRange.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.ListBoxItemRange"/> struct.
            </summary>
            <param name="middle">The middle.</param>
            <param name="top">The top.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItemRange.MiddleIndex">
            <summary>
            Gets the index of the middle item.
            </summary>
            <value>The index of the middle item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItemRange.TopIndex">
            <summary>
            Gets the index of the top item.
            </summary>
            <value>The index of the top item.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.ListBoxItemRange.BottomIndex">
            <summary>
            Gets the index of the bottom item.
            </summary>
            <value>The index of the bottom item.</value>
        </member>
        <member name="T:Telerik.Windows.Controls.ScrollViewerHook">
            <summary>
            Hooks the manipulation events of a ScrollViewer and raises events that notify for a change in the scrolling behavior.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollViewerHook.IsInitialized">
            <summary>
            Determines whether the listener is properly initialized with a valid ScrollViewer instance.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollViewerHook.ScrollViewer">
            <summary>
            Gets the attached ScrollViewer instance (if any).
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollViewerHook.CurrentScrollState">
            <summary>
            Gets the current scroll state of the attached ScrollViewer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.ScrollViewerHook.PostManipulating">
            <summary>
            Determines whether the attached ScrollViewer is in a post-manipulation animation.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.InfiniteDataSource`1">
            <summary>
            Represents a data source for a <see cref="T:Telerik.Windows.Controls.RadInfiniteListBox"/>.
            This class implements an infrastructure for virtualizing data items in loop mode
            based on a given virtual count.
            </summary>
            <typeparam name="T">The type of data items to virtualize.</typeparam>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteDataSource`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InfiniteDataSource`1"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteDataSource`1.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InfiniteDataSource`1"/> class.
            </summary>
            <param name="virtualCount">The count of the virtual items contained in this data source.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteDataSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.InfiniteDataSource`1"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.InfiniteDataSource`1.GetItemAt(System.Int32)">
            <summary>
            Gets the item at a given index..
            </summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="P:Telerik.Windows.Controls.InfiniteDataSource`1.IsWheelModeEnabled">
            <summary>
            Gets or sets a boolean value determining whether the 'wheel'
            mode is enabled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.InfiniteDataSource`1.HeadSize">
            <summary>
            Gets an integer that represents the count of invisible items
            added at the beginning of the logical items' list to allow
            centering of the first logical item.
            </summary>
            <value>The size of the head.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.InfiniteDataSource`1.TailSize">
            <summary>
            Gets an integer that represents the count of invisible items
            added at the end of the logical items' list to allow centering of the
            first logical item.
            </summary>
            <value>The size of the tail.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.InfiniteDataSource`1.VisibleItemCount">
            <summary>
            Gets or sets the count of item currently
            visible on the screen.
            </summary>
            <value>The visible item count.</value>
        </member>
        <member name="P:Telerik.Windows.Controls.InfiniteDataSource`1.LogicalItems">
            <summary>
            Gets a collection of items that are virtualized.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.InfiniteDataSource`1.LogicalCount">
            <summary>
            Gets the logical count of the data source.
            </summary>
        </member>
        <member name="T:Telerik.Windows.Controls.RadInfiniteListBox">
            <summary>
            Represents a <see cref="T:System.Windows.Controls.ListBox"/> control that supports looping of finite count of items via
            a <see cref="T:Telerik.Windows.Controls.InfiniteDataSource`1"/>.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadInfiniteListBox.ItemSpacingProperty">
            <summary>
            Identifies the ItemSpacing dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadInfiniteListBox.ItemHeightProperty">
            <summary>
            Identifies the ItemHeight dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadInfiniteListBox.ItemWidthProperty">
            <summary>
            Identifies the ItemWidth dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadInfiniteListBox.VerticalOffsetProperty">
            <summary>
            Identifies the VerticalOffset dependency property.
            </summary>
        </member>
        <member name="F:Telerik.Windows.Controls.RadInfiniteListBox.IsCollapsedProperty">
            <summary>
            Identifies the IsCollapsed dependency property.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Telerik.Windows.Controls.RadInfiniteListBox"/> class.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.EndAnimation">
            <summary>
            Ends the scrolling animation.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.SuspendAnimations">
            <summary>
            Suspends the scrolling animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.ResumeAnimations">
            <summary>
            Resumes the scrolling animations.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.CenterSelectedIndex(System.Int32)">
            <summary>
            Advances the logical index to the middle of the list and selects it. Also centers the selected item vertically.
            </summary>
            <param name="logicalIndex">The index of the logical item from the <see cref="T:Telerik.Windows.Controls.InfiniteDataSource`1"/>.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetVisibleItemRange">
            <summary>
            Gets an instance of the <see cref="T:Telerik.Windows.Controls.ListBoxItemRange"/> struct
            representing index range of the currently visible items on the viewport.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnApplyTemplate">
            <summary>
            Builds the visual tree for the <see cref="T:System.Windows.Controls.ListBox"/> control when a new template is applied.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.CanSelectItem(Telerik.Windows.Controls.ISelectorItem)">
            <summary>
            Determines whether the given <see cref="T:Telerik.Windows.Controls.ISelectorItem"/> can be selected in the list box.
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if this instance can be selected; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.InitData">
            <summary>
            Initializes the data source this list is bound to.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnInitialized">
            <summary>
            Called after the layout has been initialized.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.ClearContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Removes any bindings and templates applied to the item container for the specified content.
            </summary>
            <param name="element">The combo box item used to display the specified content.</param>
            <param name="item">The item content.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)">
            <summary>
            Called before the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp"/> event occurs.
            </summary>
            <param name="e">The data for the event.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetContainerForItemOverride">
            <summary>
            Creates or identifies the element used to display a specified item.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Controls.ListBoxItem"/> corresponding to a specified item.
            </returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.PrepareContainerForItemOverride(System.Windows.DependencyObject,System.Object)">
            <summary>
            Prepares the specified element to display the specified item.
            </summary>
            <param name="element">The element used to display the specified item.</param>
            <param name="item">The item to display.</param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.CenterSelectedItem">
            <summary>
            Changes the vertical scroll offset so that the selected item is
            centered on the viewport.
            </summary>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetVisibleItemCount">
            <summary>
            Gets the count of the visible items on the viewport.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetVisibleItemParts">
            <summary>
            Gets the visible item parts, i.e. a double representation of the item parts currently visible on the screen.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetVisibleItemPartsWithSpacing">
            <summary>
            Gets the visible item parts, i.e. a double representation of the
            item parts currently visible on the screen including the item spacing.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetHeight">
            <summary>
            Gets the height of the listbox. If the
            height of the listbox is greater than the height of the 
            application's host, the host's height is considered.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.GetMiddleItemIndex">
            <summary>
            Gets the index of the item at the nearest position to the middle of the viewport.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnSelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            Fires when the selected item has changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnLoaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires when the control has been loaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnSizeChanged(System.Object,System.Windows.SizeChangedEventArgs)">
            <summary>
            Handles the SizeChanged event.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnUnloaded(System.Object,System.Windows.RoutedEventArgs)">
            <summary>
            Fires when the control has been unloaded.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Telerik.Windows.Controls.RadInfiniteListBox.OnLayoutInitialized">
            <summary>
            Fires when the layout of the control has been initialized.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.ItemHeight">
            <summary>
            Gets or sets the height for all items in the list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.ItemWidth">
            <summary>
            Gets or sets the height for all items in the list.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.ItemSpacing">
            <summary>
            Gets or sets the spacing to be applied between two neighbour items.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.VerticalOffset">
            <summary>
            Gets or sets the vertical offset for the list. This is internally synchronized with the ScrollViewer.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.IsLoaded">
            <summary>
            Determines whether the listbox is loaded on the scene.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.IsSnapAnimationActive">
            <summary>
            Determines whether the snap animation used to center the selected item is currently running.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.IsSnapAnimationEnabled">
            <summary>
            Determines whether the snap animation used to center the selected item is enabled.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.IsCollapsed">
            <summary>
            Determines whether the list is in collapsed state. If yes, only the selected item will be visible.
            </summary>
        </member>
        <member name="P:Telerik.Windows.Controls.RadInfiniteListBox.IsInitialized">
            <summary>
            Determines whether the list is properly initialized. 
            That is the first layout pass is completed and all visual items' state is updated.
            </summary>
        </member>
    </members>
</doc>
